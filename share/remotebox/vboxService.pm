package vboxService;
# Generated by SOAP::Lite (v1.27) for Perl -- soaplite.com
# Copyright (C) 2000-2006 Paul Kulchenko, Byrne Reese
# -- generated at [Thu Dec 20 20:01:16 2018]

# CAUTION: This file has been generated using stubmaker.pl from the WSDL file supplied with
# the VirtualBox SDK. Additional manual modifications have also been made.

my %methods = (
'IMouse_putMouseEventAbsolute' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dz', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dw', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'buttonState', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMouse_putMouseEventAbsolute
'IMachine_getChipsetType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getChipsetType
'IMachine_getIcon' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getIcon
'IMachine_moveTo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'folder', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_moveTo
'IKeyboard_releaseKeys' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboard_releaseKeys
'IMachine_getCPUStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpu', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUStatus
'IMachineDebugger_loadPlugIn' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_loadPlugIn
'ICursorPositionChangedEvent_getHasData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICursorPositionChangedEvent_getHasData
'IMachine_getUSBControllers' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getUSBControllers
'IVirtualBox_getInternalNetworks' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getInternalNetworks
'IDataStream_getReadSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDataStream_getReadSize
'IGuestScreenInfo_getBitsPerPixel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getBitsPerPixel
'ISystemProperties_getAutostartDatabasePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getAutostartDatabasePath
'ISystemProperties_setProxyMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'proxyMode', type => 'vbox:ProxyMode', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setProxyMode
'IUSBDeviceFilter_setRevision' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'revision', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setRevision
'IAppliance_addPasswords' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'identifiers', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'passwords', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_addPasswords
'INetworkAdapter_getPromiscModePolicy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getPromiscModePolicy
'IHostVideoInputDevice_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostVideoInputDevice_getName
'IMedium_getLogicalSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getLogicalSize
'IFsObjInfo_getAccessTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getAccessTime
'IMachine_detachHostPCIDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostAddress', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_detachHostPCIDevice
'IMachine_attachDeviceWithoutMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:DeviceType', attr => {}),
    ], # end parameters
  }, # end IMachine_attachDeviceWithoutMedium
'ISystemProperties_setLogHistoryCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logHistoryCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setLogHistoryCount
'ISnapshot_getChildrenCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getChildrenCount
'IDisplay_getGuestScreenLayout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDisplay_getGuestScreenLayout
'IMachine_saveSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_saveSettings
'IMachine_getHPETEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getHPETEnabled
'INATNetworkPortForwardEvent_getGuestIp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getGuestIp
'IHost_removeUSBDeviceFilter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_removeUSBDeviceFilter
'IVBoxSVCAvailabilityChangedEvent_getAvailable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVBoxSVCAvailabilityChangedEvent_getAvailable
'IVirtualBoxErrorInfo_getNext' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getNext
'IAudioAdapter_setAudioController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioController', type => 'vbox:AudioControllerType', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setAudioController
'IFsObjInfo_getDeviceNumber' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getDeviceNumber
'IVirtualBoxErrorInfo_getResultDetail' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getResultDetail
'IMachine_getFaultToleranceAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getFaultToleranceAddress
'IMedium_changeEncryption' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'currentPassword', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cipher', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'newPassword', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'newPasswordId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_changeEncryption
'IMachine_getIOCacheEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getIOCacheEnabled
'IVRDEServer_setAuthTimeout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'authTimeout', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setAuthTimeout
'IRuntimeErrorEvent_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRuntimeErrorEvent_getId
'IConsole_getMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getMachine
'IConsole_teleport' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostname', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'tcpport', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maxDowntime', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IConsole_teleport
'IMachineStateChangedEvent_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineStateChangedEvent_getState
'ICertificate_getSubjectName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getSubjectName
'IMachine_setTeleporterPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterPort', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterPort
'ISessionStateChangedEvent_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISessionStateChangedEvent_getState
'IMedium_setProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'values', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setProperties
'IHost_getProcessorCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorCount
'IUnattended_setScriptTemplatePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'scriptTemplatePath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setScriptTemplatePath
'IVFSExplorer_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_getType
'IBIOSSettings_getACPIEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getACPIEnabled
'IMachine_getTeleporterPassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterPassword
'INATNetwork_getGateway' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getGateway
'IMachine_getIOCacheSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getIOCacheSize
'IUSBDeviceFilter_getPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getPort
'IUnattended_getValidationKitIsoPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getValidationKitIsoPath
'INetworkAdapter_getMACAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getMACAddress
'IMouseCapabilityChangedEvent_getNeedsHostCursor' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouseCapabilityChangedEvent_getNeedsHostCursor
'IDisplay_detachFramebuffer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDisplay_detachFramebuffer
'IFsObjInfo_getGenerationId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getGenerationId
'IMachineDebugger_resetStats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pattern', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_resetStats
'INATEngine_setNetworkSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mtu', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'sockSnd', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'sockRcv', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'TcpWndSnd', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'TcpWndRcv', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INATEngine_setNetworkSettings
'IVirtualBox_getMachineStates' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machines', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getMachineStates
'IVirtualBox_getNATNetworks' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getNATNetworks
'IMachine_getCPUIDPortabilityLevel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUIDPortabilityLevel
'IGuest_getAdditionsRunLevel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getAdditionsRunLevel
'IUSBDevice_getSpeed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getSpeed
'IVFSExplorer_cd' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dir', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_cd
'INATNetwork_getNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getNetwork
'IDataStream_read' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDataStream_read
'IMedium_setIds' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'setImageId', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'imageId', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'setParentId', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'parentId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setIds
'IUSBDevice_getProductId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getProductId
'IGuestSession_fileExists' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'followSymlinks', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileExists
'IVirtualBox_getExtraData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getExtraData
'IKeyboard_putScancode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'scancode', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IKeyboard_putScancode
'IMachineDebugger_injectNMI' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_injectNMI
'IRecordingScreenSettings_getOptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getOptions
'IMedium_getAllowedTypes' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getAllowedTypes
'IVirtualBox_createNATNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createNATNetwork
'ISystemProperties_getStorageControllerHotplugCapable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerType', type => 'vbox:StorageControllerType', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getStorageControllerHotplugCapable
'IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'ISerialPort_setServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'server', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setServer
'IMousePointerShapeChangedEvent_getShape' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShapeChangedEvent_getShape
'IParallelPortChangedEvent_getParallelPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPortChangedEvent_getParallelPort
'ISystemProperties_getMaxPortCountForStorageBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxPortCountForStorageBus
'IConsole_getAttachedPCIDevices' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getAttachedPCIDevices
'IGuestProcessOutputEvent_getData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessOutputEvent_getData
'IGuestSession_directoryExists' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'followSymlinks', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryExists
'IAudioAdapter_setProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setProperty
'IAudioAdapter_getAudioDriver' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getAudioDriver
'IGuestSession_getCurrentDirectory' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getCurrentDirectory
'IDisplay_queryFramebuffer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_queryFramebuffer
'IGuestSession_fsObjCopyArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FileCopyFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjCopyArray
'ISystemProperties_setFreeDiskSpacePercentWarning' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpacePercentWarning', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpacePercentWarning
'IMachine_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getName
'IGuestUserStateChangedEvent_getDomain' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestUserStateChangedEvent_getDomain
'INATNetworkSettingEvent_getNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkSettingEvent_getNetwork
'IRecordingScreenSettings_getVideoRateControlMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getVideoRateControlMode
'IBIOSSettings_setIOAPICEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOAPICEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setIOAPICEnabled
'IVirtualBox_openMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settingsFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openMachine
'IGuest_updateGuestAdditions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'arguments', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:AdditionsUpdateFlag', attr => {}),
    ], # end parameters
  }, # end IGuest_updateGuestAdditions
'IHost_getDVDDrives' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getDVDDrives
'IGuestKeyboardEvent_getScancodes' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestKeyboardEvent_getScancodes
'IMachine_hotUnplugCPU' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpu', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_hotUnplugCPU
'INATEngine_getRedirects' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getRedirects
'IHost_getUSBDeviceFilters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getUSBDeviceFilters
'IMediumIO_formatFAT' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'quick', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMediumIO_formatFAT
'IMouse_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getEventSource
'IDHCPServer_start' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'trunkName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'trunkType', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_start
'IGuestSession_fileQuerySize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'followSymlinks', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileQuerySize
'ICloudProviderManager_getProviderByShortName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'providerName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProviderManager_getProviderByShortName
'IHost_findUSBDeviceById' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findUSBDeviceById
'IMachine_passthroughDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'passthrough', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_passthroughDevice
'IVFSExplorer_update' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_update
'IVirtualSystemDescription_setFinalValues' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'VBoxValues', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'extraConfigValues', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_setFinalValues
'ISharedFolder_setAutoMount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autoMount', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_setAutoMount
'ISystemProperties_setExclusiveHwVirt' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'exclusiveHwVirt', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setExclusiveHwVirt
'IMachine_getAutostopType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAutostopType
'IMachine_discardSavedState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'fRemoveFile', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_discardSavedState
'IRecordingScreenSettings_getVideoRate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getVideoRate
'IConsole_getUseHostClipboard' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getUseHostClipboard
'IUSBDevice_getPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getPort
'IConsole_getPowerButtonHandled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getPowerButtonHandled
'IHost_addUSBDeviceSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'backend', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'address', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'propertyNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'propertyValues', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_addUSBDeviceSource
'IHost_getDomainName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getDomainName
'IMachineDebugger_setRegisters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'values', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setRegisters
'IAudioAdapter_setAudioCodec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioCodec', type => 'vbox:AudioCodecType', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setAudioCodec
'IProgress_getOperationPercent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperationPercent
'IPerformanceMetric_getObject' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getObject
'IVRDEServer_getAuthType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getAuthType
'IDHCPServer_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getEventSource
'INetworkAdapter_setMACAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'MACAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setMACAddress
'INATEngine_setHostIP' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostIP', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setHostIP
'IProcess_getExitCode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getExitCode
'IPerformanceCollector_setupMetrics' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'period', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'count', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_setupMetrics
'IMachineDebugger_setCSAMEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CSAMEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setCSAMEnabled
'IMachine_getMediumAttachmentsOfController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMediumAttachmentsOfController
'ICertificate_getSubjectUniqueIdentifier' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getSubjectUniqueIdentifier
'IFile_getOffset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getOffset
'IAudioAdapter_setEnabledOut' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabledOut', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setEnabledOut
'IStorageController_getMinPortCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getMinPortCount
'IWebsessionManager_logoff' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => 'refIVirtualBox', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IWebsessionManager_logoff
'IUSBDeviceFilter_getProduct' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getProduct
'IMachineDebugger_setVirtualTimeRate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'virtualTimeRate', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setVirtualTimeRate
'IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces
'INetworkAdapter_getNATEngine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getNATEngine
'ISerialPort_setHostMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostMode', type => 'vbox:PortMode', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setHostMode
'IConsole_powerUpPaused' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerUpPaused
'IBandwidthControl_createBandwidthGroup' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:BandwidthGroupType', attr => {}),
      SOAP::Data->new(name => 'maxBytesPerSec', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IBandwidthControl_createBandwidthGroup
'IVirtualBox_removeNATNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'network', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_removeNATNetwork
'IVirtualBox_findNATNetworkByName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findNATNetworkByName
'IUSBDeviceFilter_setManufacturer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'manufacturer', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setManufacturer
'INATNetwork_getPortForwardRules6' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getPortForwardRules6
'IRecordingScreenSettings_setVideoRateControlMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoRateControlMode', type => 'vbox:RecordingVideoRateControlMode', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setVideoRateControlMode
'IVRDEServer_setVRDEExtPack' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'VRDEExtPack', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setVRDEExtPack
'IMachine_getSettingsFilePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSettingsFilePath
'IMachine_getSerialPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getSerialPort
'ISharedFolder_getAccessible' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_getAccessible
'IExtraDataChangedEvent_getKey' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IExtraDataChangedEvent_getKey
'IUSBDeviceStateChangedEvent_getAttached' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceStateChangedEvent_getAttached
'ISerialPort_setUartType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'uartType', type => 'vbox:UartType', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setUartType
'IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces
'INATEngine_getDNSProxy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getDNSProxy
'IUnattended_setLanguage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'language', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setLanguage
'IGuestSession_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getStatus
'IMachine_adoptSavedState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'savedStateFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_adoptSavedState
'IFile_getOpenAction' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getOpenAction
'IUnattended_setLocale' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'locale', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setLocale
'IGuestSessionStateChangedEvent_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSessionStateChangedEvent_getId
'IStorageController_setName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_setName
'IUSBDeviceStateChangedEvent_getError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceStateChangedEvent_getError
'INATRedirectEvent_getSlot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getSlot
'IMachineDebugger_dumpStats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pattern', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_dumpStats
'IRecordingChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'IMachine_restoreSnapshot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'snapshot', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_restoreSnapshot
'IManagedObjectRef_release' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IManagedObjectRef_release
'IMedium_refreshState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_refreshState
'IMachine_getAccessible' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccessible
'INATRedirectEvent_getGuestIP' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getGuestIP
'IStorageController_getUseHostIOCache' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getUseHostIOCache
'ICPUChangedEvent_getCPU' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICPUChangedEvent_getCPU
'IAudioAdapter_getPropertiesList' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getPropertiesList
'IMouse_putEventMultiTouch' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'count', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'contacts', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'scanTime', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMouse_putEventMultiTouch
'IGuestSession_close' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_close
'IMedium_checkEncryptionPassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_checkEncryptionPassword
'IVirtualBox_removeDHCPServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'server', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_removeDHCPServer
'IDHCPServer_removeVmSlotOption' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'vmname', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'option', type => 'vbox:DhcpOpt', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_removeVmSlotOption
'IMachine_findSnapshot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'nameOrId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_findSnapshot
'ISystemProperties_getMaxGuestCPUCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestCPUCount
'INATRedirectEvent_getHostIP' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getHostIP
'IMachineDebugger_setRegister' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setRegister
'IFile_setACL' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'acl', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mode', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFile_setACL
'IMedium_setType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:MediumType', attr => {}),
    ], # end parameters
  }, # end IMedium_setType
'IHost_getAcceleration3DAvailable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getAcceleration3DAvailable
'IDirectory_close' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDirectory_close
'ISharedFolder_getHostPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_getHostPath
'IVirtualBox_getDHCPServers' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getDHCPServers
'IMachine_readSavedScreenshotToArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bitmapFormat', type => 'vbox:BitmapFormat', attr => {}),
    ], # end parameters
  }, # end IMachine_readSavedScreenshotToArray
'IDHCPServer_removeVmSlotOptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'vmname', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_removeVmSlotOptions
'IGuestSessionStateChangedEvent_getError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSessionStateChangedEvent_getError
'IRecordingScreenSettings_getFilename' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getFilename
'IFile_close' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_close
'IProcess_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getName
'IGuestFileIOEvent_getOffset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileIOEvent_getOffset
'IGuestSession_fileCopyFromGuest' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FileCopyFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileCopyFromGuest
'ISerialPort_getIRQ' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getIRQ
'IMachine_setBandwidthGroupForDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'bandwidthGroup', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setBandwidthGroupForDevice
'INetworkAdapter_getTraceFile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getTraceFile
'IProgress_getCanceled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getCanceled
'IMachine_getAccelerate2DVideoEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccelerate2DVideoEnabled
'IEvent_waitProcessed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IEvent_waitProcessed
'IMachine_getUSBControllerCountByType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:USBControllerType', attr => {}),
    ], # end parameters
  }, # end IMachine_getUSBControllerCountByType
'IFramebufferOverlay_getY' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebufferOverlay_getY
'IMachine_setFaultTolerancePassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'faultTolerancePassword', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setFaultTolerancePassword
'IMachine_readLog' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'idx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IMachine_readLog
'IVirtualBox_getPerformanceCollector' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getPerformanceCollector
'IMachine_setNoBandwidthGroupForDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_setNoBandwidthGroupForDevice
'IAudioAdapter_setAudioDriver' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioDriver', type => 'vbox:AudioDriverType', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setAudioDriver
'ISystemProperties_getDefaultHardDiskFormat' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultHardDiskFormat
'IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces
'INATRedirectEvent_getProto' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getProto
'IMachine_getGuestProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGuestProperty
'IConsole_clearAllDiskEncryptionPasswords' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_clearAllDiskEncryptionPasswords
'IGuestSession_setEnvironmentChanges' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'environmentChanges', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_setEnvironmentChanges
'IUSBDeviceFilters_createDeviceFilter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilters_createDeviceFilter
'ICertificate_getKeyUsage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getKeyUsage
'ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces
'INetworkAdapter_setBootPriority' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bootPriority', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setBootPriority
'IMedium_compact' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_compact
'IConsole_getGuest' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getGuest
'IHost_removeHostOnlyNetworkInterface' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_removeHostOnlyNetworkInterface
'IDHCPServer_getGlobalOptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getGlobalOptions
'IMachine_exportTo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'appliance', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_exportTo
'IProgress_getOperationCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperationCount
'IDisplay_setVideoModeHint' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'display', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'changeOrigin', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'originX', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'originY', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bitsPerPixel', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_setVideoModeHint
'IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'IEventSource_createListener' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEventSource_createListener
'IMachine_getGraphicsControllerType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGraphicsControllerType
'IHost_findHostNetworkInterfaceByName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostNetworkInterfaceByName
'IMachine_setHardwareVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hardwareVersion', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setHardwareVersion
'IFramebufferOverlay_getAlpha' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebufferOverlay_getAlpha
'INATNetwork_getNeedDhcpServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getNeedDhcpServer
'IVRDEServer_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getEnabled
'IAudioAdapter_setEnabledIn' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabledIn', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setEnabledIn
'IHostNetworkInterface_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getStatus
'IMedium_deleteStorage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_deleteStorage
'ISystemProperties_getMinGuestRAM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinGuestRAM
'IVetoEvent_isApproved' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVetoEvent_isApproved
'IMachine_setGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'groups', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setGroups
'IClipboardModeChangedEvent_getClipboardMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IClipboardModeChangedEvent_getClipboardMode
'IUnattended_getPassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getPassword
'IConsole_detachUSBDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_detachUSBDevice
'INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled
'IMedium_lockWrite' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_lockWrite
'IBandwidthControl_getNumGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthControl_getNumGroups
'IMachine_getCPUIDLeaf' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'idx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'idxSub', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUIDLeaf
'IMachineDebugger_getRegisters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getRegisters
'IMachineDebugger_info' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'args', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_info
'INATNetworkChangedEvent_getNetworkName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkChangedEvent_getNetworkName
'IManagedObjectRef_getInterfaceName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IManagedObjectRef_getInterfaceName
'INATNetwork_setIPv6Enabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPv6Enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setIPv6Enabled
'INATNetwork_getAdvertiseDefaultIPv6RouteEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getAdvertiseDefaultIPv6RouteEnabled
'IMedium_getVariant' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getVariant
'IProgressEvent_getProgressId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgressEvent_getProgressId
'IStorageController_getMaxPortCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getMaxPortCount
'IVFSExplorer_remove' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_remove
'IPerformanceMetric_getUnit' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getUnit
'IHostNetworkInterface_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getName
'IReusableEvent_getGeneration' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IReusableEvent_getGeneration
'IGuestSession_copyFromGuest' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'sources', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'filters', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_copyFromGuest
'IHost_createHostOnlyNetworkInterface' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_createHostOnlyNetworkInterface
'IUnattended_setInstallTestExecService' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'installTestExecService', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IUnattended_setInstallTestExecService
'IMachine_getPCIDeviceAssignments' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getPCIDeviceAssignments
'ISerialPort_getSlot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getSlot
'IProgress_getTimeout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getTimeout
'IFsObjInfo_getAllocatedSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getAllocatedSize
'IVirtualBox_getDVDImages' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getDVDImages
'IUnattended_setPackageSelectionAdjustments' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'packageSelectionAdjustments', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setPackageSelectionAdjustments
'ICertificate_getSelfSigned' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getSelfSigned
'IMachine_getSettingsAuxFilePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSettingsAuxFilePath
'IMachine_setHotPluggableForDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'hotPluggable', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setHotPluggableForDevice
'IUSBDeviceFilter_getSerialNumber' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getSerialNumber
'INATNetwork_setNetworkName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setNetworkName
'IUSBDevice_getManufacturer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getManufacturer
'IMachine_getTeleporterEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterEnabled
'IUSBController_getUSBStandard' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getUSBStandard
'IMachine_setCPUProfile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CPUProfile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUProfile
'INATNetwork_stop' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_stop
'IProgress_waitForCompletion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IProgress_waitForCompletion
'IMedium_cloneToBase' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
    ], # end parameters
  }, # end IMedium_cloneToBase
'IParallelPort_setIOBase' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOBase', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setIOBase
'IMachineDebugger_modifyLogGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settings', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_modifyLogGroups
'IRecordingScreenSettings_getVideoFPS' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getVideoFPS
'IMachine_getFaultToleranceSyncInterval' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getFaultToleranceSyncInterval
'IMediumFormat_describeProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_describeProperties
'IProcess_read' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'handle', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'toRead', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProcess_read
'IConsole_removeSharedFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_removeSharedFolder
'IGuestPropertyChangedEvent_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestPropertyChangedEvent_getName
'IMachineDebugger_getLogDbgDestinations' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getLogDbgDestinations
'IMachineDebugger_setRecompileSupervisor' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'recompileSupervisor', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setRecompileSupervisor
'IAppliance_getMachines' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getMachines
'INetworkAdapter_setBandwidthGroup' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bandwidthGroup', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setBandwidthGroup
'IProcess_getPID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getPID
'ISystemProperties_getSerialPortCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getSerialPortCount
'ISnapshot_getTimeStamp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getTimeStamp
'IMachine_cloneTo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mode', type => 'vbox:CloneMode', attr => {}),
      SOAP::Data->new(name => 'options', type => 'vbox:CloneOptions', attr => {}),
    ], # end parameters
  }, # end IMachine_cloneTo
'IHost_removeUSBDeviceSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_removeUSBDeviceSource
'ICertificate_getPublicKeyAlgorithmOID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getPublicKeyAlgorithmOID
'IFramebufferOverlay_getX' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebufferOverlay_getX
'IMachineDebugger_getOSVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getOSVersion
'IProcess_write' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'handle', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'data', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProcess_write
'ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces
'IVirtualBox_getProgressOperations' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getProgressOperations
'INetworkAdapter_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getEnabled
'IProgress_setTimeout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProgress_setTimeout
'IFsObjInfo_getUID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getUID
'IMouse_putEventMultiTouchString' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'count', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'contacts', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'scanTime', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMouse_putEventMultiTouchString
'IHost_getProcessorSpeed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorSpeed
'IMachine_getEmulatedUSBCardReaderEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getEmulatedUSBCardReaderEnabled
'IMachine_deleteSnapshot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_deleteSnapshot
'ICloudProvider_getSupportedPropertyNames' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getSupportedPropertyNames
'IGuestMultiTouchEvent_getContactCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMultiTouchEvent_getContactCount
'IMousePointerShapeChangedEvent_getXhot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShapeChangedEvent_getXhot
'IPCIAddress_setBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'xsd:short', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_setBus
'INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces
'ISystemProperties_getMaxDevicesPerPortForStorageBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxDevicesPerPortForStorageBus
'IMedium_createDiffStorage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
    ], # end parameters
  }, # end IMedium_createDiffStorage
'IUnattended_done' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_done
'IAppliance_getCertificate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getCertificate
'ISession_setName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_setName
'IGuestSession_getUserDocuments' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getUserDocuments
'IGuestSession_fileOpenEx' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accessMode', type => 'vbox:FileAccessMode', attr => {}),
      SOAP::Data->new(name => 'openAction', type => 'vbox:FileOpenAction', attr => {}),
      SOAP::Data->new(name => 'sharingMode', type => 'vbox:FileSharingMode', attr => {}),
      SOAP::Data->new(name => 'creationMode', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FileOpenExFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileOpenEx
'INATEngine_setDNSUseHostResolver' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'DNSUseHostResolver', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATEngine_setDNSUseHostResolver
'IVetoEvent_addApproval' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'reason', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVetoEvent_addApproval
'IVirtualBoxErrorInfo_getText' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getText
'IMouseCapabilityChangedEvent_getSupportsAbsolute' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouseCapabilityChangedEvent_getSupportsAbsolute
'IMachine_setCPUHotPlugEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CPUHotPlugEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUHotPlugEnabled
'IMachine_discardSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_discardSettings
'IVirtualBox_getMachinesByGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'groups', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getMachinesByGroups
'IMachine_getGuestPropertyTimestamp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGuestPropertyTimestamp
'ISystemProperties_getLogHistoryCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getLogHistoryCount
'IPCIAddress_setDevFunction' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'devFunction', type => 'xsd:short', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_setDevFunction
'IMedium_setDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setDescription
'IUSBDeviceFilters_removeDeviceFilter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilters_removeDeviceFilter
'IGuestSession_directoryCreate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mode', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:DirectoryCreateFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryCreate
'IBIOSSettings_getPXEDebugEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getPXEDebugEnabled
'IMediumIO_initializePartitionTable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'vbox:PartitionTableType', attr => {}),
      SOAP::Data->new(name => 'wholeDiskInOneEntry', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMediumIO_initializePartitionTable
'ICPUExecutionCapChangedEvent_getExecutionCap' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICPUExecutionCapChangedEvent_getExecutionCap
'IHost_getNameServers' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getNameServers
'IPerformanceMetric_getCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getCount
'ISnapshot_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getId
'IGuestSession_getProcesses' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getProcesses
'IFsObjInfo_getUserName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getUserName
'IUnattended_setPassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setPassword
'IMedium_createBaseStorage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logicalSize', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
    ], # end parameters
  }, # end IMedium_createBaseStorage
'IUSBDevice_getPortVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getPortVersion
'IRecordingSettings_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IRecordingSettings_setEnabled
'ICloudProfile_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_getName
'IMachine_setHardwareUUID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hardwareUUID', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setHardwareUUID
'IGuestSession_waitFor' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'waitFor', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuestSession_waitFor
'IVirtualSystemDescription_getCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getCount
'IFsObjInfo_getModificationTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getModificationTime
'INetworkAdapter_getBandwidthGroup' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getBandwidthGroup
'IMachine_getHWVirtExProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:HWVirtExPropertyType', attr => {}),
    ], # end parameters
  }, # end IMachine_getHWVirtExProperty
'IHost_findHostNetworkInterfacesOfType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:HostNetworkInterfaceType', attr => {}),
    ], # end parameters
  }, # end IHost_findHostNetworkInterfacesOfType
'INATNetwork_getLocalMappings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getLocalMappings
'IBandwidthGroup_getReference' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthGroup_getReference
'IMachine_getSnapshotCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSnapshotCount
'ICertificate_getPublicKeyAlgorithm' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getPublicKeyAlgorithm
'IAppliance_getVirtualSystemDescriptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getVirtualSystemDescriptions
'IHostNetworkInterface_getIPV6NetworkMaskPrefixLength' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPV6NetworkMaskPrefixLength
'ISystemProperties_setFreeDiskSpacePercentError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpacePercentError', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpacePercentError
'ICloudProviderManager_getProviders' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProviderManager_getProviders
'IFile_queryInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_queryInfo
'IMachineDebugger_getHWVirtExUXEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getHWVirtExUXEnabled
'IMachineDebugger_getLogDbgGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getLogDbgGroups
'IMachine_setGuestPropertyValue' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setGuestPropertyValue
'IMachine_setFaultToleranceAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'faultToleranceAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setFaultToleranceAddress
'IUnattended_getDetectedOSHints' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getDetectedOSHints
'ICertificate_getCertificateAuthority' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getCertificateAuthority
'ISystemProperties_setWebServiceAuthLibrary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'webServiceAuthLibrary', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setWebServiceAuthLibrary
'ICloudProvider_getProfiles' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getProfiles
'IHostPCIDevicePlugEvent_getPlugged' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostPCIDevicePlugEvent_getPlugged
'IParallelPort_setPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setPath
'IHostVideoInputDevice_getPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostVideoInputDevice_getPath
'ICloudProviderManager_getProviderByName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'providerName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProviderManager_getProviderByName
'ISystemProperties_getMinPortCountForStorageBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinPortCountForStorageBus
'IDnDBase_addFormats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'formats', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDBase_addFormats
'IConsole_createSharedFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'automount', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'autoMountPoint', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_createSharedFolder
'ICloudProvider_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getId
'IUnattended_reconfigureVM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_reconfigureVM
'ISystemProperties_getDefaultAdditionsISO' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultAdditionsISO
'IMachine_getStorageControllerByName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getStorageControllerByName
'IVRDEServer_getVRDEProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getVRDEProperty
'IUSBController_setType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:USBControllerType', attr => {}),
    ], # end parameters
  }, # end IUSBController_setType
'INATEngine_setDNSPassDomain' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'DNSPassDomain', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATEngine_setDNSPassDomain
'IGuestSession_symlinkExists' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'symlink', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_symlinkExists
'ISystemProperties_getMaxNetworkAdaptersOfType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'chipset', type => 'vbox:ChipsetType', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:NetworkAttachmentType', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxNetworkAdaptersOfType
'IGuestSession_environmentScheduleUnset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_environmentScheduleUnset
'IUSBDevice_getRevision' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getRevision
'IBIOSSettings_setLogoFadeOut' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoFadeOut', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoFadeOut
'IRecordingScreenSettings_getAudioChannels' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getAudioChannels
'ISystemProperties_getDeviceTypesForStorageBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDeviceTypesForStorageBus
'IMachine_getFaultTolerancePort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getFaultTolerancePort
'IGuestSession_waitForArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'waitFor', type => 'vbox:GuestSessionWaitForFlag', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuestSession_waitForArray
'IGuestSession_processCreate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'executable', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'arguments', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'environmentChanges', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:ProcessCreateFlag', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuestSession_processCreate
'IGuestUserStateChangedEvent_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestUserStateChangedEvent_getState
'IMachine_getCPUProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:CPUPropertyType', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUProperty
'IDnDSource_drop' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'action', type => 'vbox:DnDAction', attr => {}),
    ], # end parameters
  }, # end IDnDSource_drop
'IPCIAddress_getBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_getBus
'IMachineDebugger_dumpGuestCore' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'filename', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'compression', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_dumpGuestCore
'IUnattended_getProductKey' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getProductKey
'IDHCPServer_removeGlobalOption' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'option', type => 'vbox:DhcpOpt', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_removeGlobalOption
'IMachineDebugger_getRegister' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getRegister
'IMachine_setRTCUseUTC' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'RTCUseUTC', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setRTCUseUTC
'ICPUChangedEvent_getAdd' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICPUChangedEvent_getAdd
'ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'INetworkAdapter_setAdapterType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'adapterType', type => 'vbox:NetworkAdapterType', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setAdapterType
'IAppliance_getWarnings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getWarnings
'IMousePointerShape_getHeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShape_getHeight
'IUSBDeviceFilter_getActive' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getActive
'IConsole_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getState
'IConsole_findUSBDeviceByAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_findUSBDeviceByAddress
'INetworkAdapter_setNATNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'NATNetwork', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setNATNetwork
'INATRedirectEvent_getHostPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getHostPort
'ICloudProvider_getShortName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getShortName
'IGuestScreenInfo_getWidth' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getWidth
'IMachine_setIOCacheEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOCacheEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setIOCacheEnabled
'IRecordingScreenSettings_getDestination' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getDestination
'ICloudProviderManager_getProviderById' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'providerId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProviderManager_getProviderById
'IBIOSSettings_setLogoImagePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoImagePath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoImagePath
'IParallelPort_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getEnabled
'IUSBDeviceFilter_setProductId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'productId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setProductId
'IRecordingScreenSettings_setVideoRate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoRate', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setVideoRate
'IBIOSSettings_setLogoDisplayTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoDisplayTime', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoDisplayTime
'IMachine_removeUSBController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_removeUSBController
'IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'IStorageDeviceChangedEvent_getSilent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageDeviceChangedEvent_getSilent
'IMedium_cloneTo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
      SOAP::Data->new(name => 'parent', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_cloneTo
'IBIOSSettings_getTimeOffset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getTimeOffset
'ICloudClient_getExportLaunchParameters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudClient_getExportLaunchParameters
'IMachine_getCurrentStateModified' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCurrentStateModified
'IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces
'ISnapshot_setName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_setName
'IUSBDevice_getVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getVersion
'IHost_insertUSBDeviceFilter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'filter', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_insertUSBDeviceFilter
'IHost_getOSVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getOSVersion
'IRecordingScreenSettings_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getEnabled
'IBandwidthControl_getBandwidthGroup' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthControl_getBandwidthGroup
'IMachine_getVRAMSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getVRAMSize
'IProcess_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getStatus
'ISerialPort_getUartType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getUartType
'IUnattended_getLanguage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getLanguage
'IRecordingScreenSettings_getVideoScalingMethod' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getVideoScalingMethod
'IAppliance_read' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'file', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_read
'INetworkAdapter_setCableConnected' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cableConnected', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setCableConnected
'IMachineDebugger_getHWVirtExVPIDEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getHWVirtExVPIDEnabled
'IGuestSession_getUserHome' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getUserHome
'IStorageController_getControllerType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getControllerType
'IProgress_getOperationDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperationDescription
'IMousePointerShape_getWidth' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShape_getWidth
'IHost_getNetworkInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getNetworkInterfaces
'IGuest_getDnDTarget' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getDnDTarget
'IUnattended_getAdditionsIsoPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getAdditionsIsoPath
'IVirtualBox_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getEventSource
'IUnattended_setImageIndex' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'imageIndex', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IUnattended_setImageIndex
'IMachine_enumerateGuestProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'patterns', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_enumerateGuestProperties
'IUnattended_getLocale' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getLocale
'INetworkAdapter_setBridgedInterface' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bridgedInterface', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setBridgedInterface
'IMediumIO_getMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumIO_getMedium
'IConsole_getRemoteUSBDevices' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getRemoteUSBDevices
'IGuestScreenInfo_getPrimary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getPrimary
'IMachineDebugger_writeVirtualMemory' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'address', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bytes', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_writeVirtualMemory
'IMachine_setAutostartDelay' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autostartDelay', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setAutostartDelay
'IProcess_waitForArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'waitFor', type => 'vbox:ProcessWaitForFlag', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProcess_waitForArray
'IUnattended_getExtraInstallKernelParameters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getExtraInstallKernelParameters
'IPCIAddress_getDevFunction' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_getDevFunction
'IMediumRegisteredEvent_getMediumId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumRegisteredEvent_getMediumId
'IFramebuffer_videoModeSupported' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bpp', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_videoModeSupported
'IVirtualBox_getRevision' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getRevision
'IBIOSSettings_getLogoDisplayTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoDisplayTime
'IMachine_setDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setDescription
'IGuestFile_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFile_getMidlDoesNotLikeEmptyInterfaces
'IMedium_resize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logicalSize', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IMedium_resize
'IRecordingScreenSettings_setVideoWidth' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoWidth', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setVideoWidth
'IKeyboard_putCAD' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboard_putCAD
'IParallelPort_setIRQ' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IRQ', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setIRQ
'IMachine_showConsoleWindow' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_showConsoleWindow
'ICertificate_getTrusted' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getTrusted
'IGuestScreenInfo_getGuestMonitorStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getGuestMonitorStatus
'IMedium_moveTo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_moveTo
'IMachine_getAllowTracingToAccessVM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAllowTracingToAccessVM
'IMachine_removeAllCPUIDLeaves' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_removeAllCPUIDLeaves
'INATNetwork_setAdvertiseDefaultIPv6RouteEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'advertiseDefaultIPv6RouteEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setAdvertiseDefaultIPv6RouteEnabled
'IUnattended_getDetectedOSVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getDetectedOSVersion
'IMediumRegisteredEvent_getMediumType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumRegisteredEvent_getMediumType
'IMachine_getBootOrder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getBootOrder
'IGuestSession_copyToGuest' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'sources', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'filters', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_copyToGuest
'ISystemProperties_getMaxGuestMonitors' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestMonitors
'IProgress_getInitiator' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getInitiator
'IMediumIO_getExplorer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumIO_getExplorer
'ISerialPort_setIRQ' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IRQ', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setIRQ
'IFile_getFilename' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getFilename
'IUSBDeviceFilters_insertDeviceFilter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'filter', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilters_insertDeviceFilter
'ISnapshot_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getName
'IGuestScreenInfo_getHeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getHeight
'IMachine_setTeleporterEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterEnabled
'IFramebuffer_notifyUpdate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_notifyUpdate
'IMachineDebugger_getLogRelDestinations' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getLogRelDestinations
'IGuestSession_fileCopy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FileCopyFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileCopy
'IMedium_lockRead' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_lockRead
'IGuestSession_setTimeout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuestSession_setTimeout
'ISystemProperties_getMaxInstancesOfStorageBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'chipset', type => 'vbox:ChipsetType', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxInstancesOfStorageBus
'IGuestProcessRegisteredEvent_getRegistered' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessRegisteredEvent_getRegistered
'IGuestSession_directoryRemoveRecursive' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:DirectoryRemoveRecFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryRemoveRecursive
'IProgress_getResultCode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getResultCode
'INATNetwork_start' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'trunkType', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_start
'IGuest_getStatisticsUpdateInterval' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getStatisticsUpdateInterval
'IUSBProxyBackend_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBProxyBackend_getName
'IDnDModeChangedEvent_getDndMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDModeChangedEvent_getDndMode
'IConsole_getKeyboard' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getKeyboard
'IFramebuffer_getOverlay' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getOverlay
'IMachine_getFaultTolerancePassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getFaultTolerancePassword
'IHost_getUTCTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getUTCTime
'IPerformanceCollector_getMetrics' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_getMetrics
'INetworkAdapter_setInternalNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'internalNetwork', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setInternalNetwork
'IVirtualBoxErrorInfo_getResultCode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getResultCode
'IMedium_getAutoReset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getAutoReset
'ISystemProperties_getFreeDiskSpaceError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpaceError
'IFile_seek' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'whence', type => 'vbox:FileSeekOrigin', attr => {}),
    ], # end parameters
  }, # end IFile_seek
'IPerformanceMetric_getDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getDescription
'IUSBDeviceFilter_getRevision' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getRevision
'IAudioAdapter_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getEnabled
'IVRDEServer_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setEnabled
'IMachine_applyDefaults' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_applyDefaults
'IUSBDevice_getSerialNumber' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getSerialNumber
'IMachine_deleteSnapshotAndAllChildren' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_deleteSnapshotAndAllChildren
'IRecordingScreenSettings_setFilename' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'filename', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setFilename
'IVirtualBox_getSettingsFilePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getSettingsFilePath
'ISerialPort_getServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getServer
'INATNetwork_setNeedDhcpServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'needDhcpServer', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setNeedDhcpServer
'IVirtualSystemDescription_addDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:VirtualSystemDescriptionType', attr => {}),
      SOAP::Data->new(name => 'VBoxValue', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'extraConfigValue', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_addDescription
'IMedium_getSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getSize
'ISharedFolder_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_getName
'IMachineDebugger_getLogEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getLogEnabled
'ISnapshot_setDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_setDescription
'IDnDTarget_leave' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDnDTarget_leave
'IAppliance_createVFSExplorer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'URI', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_createVFSExplorer
'IPerformanceCollector_disableMetrics' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_disableMetrics
'IVirtualBox_getGenericNetworkDrivers' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getGenericNetworkDrivers
'ISystemProperties_getMinGuestVRAM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinGuestVRAM
'ISystemProperties_setFreeDiskSpaceError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpaceError', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpaceError
'ICertificate_getVersionNumber' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getVersionNumber
'IMachine_getOSTypeId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getOSTypeId
'INATEngine_setTFTPPrefix' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'TFTPPrefix', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setTFTPPrefix
'IMachine_setStorageControllerBootable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bootable', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setStorageControllerBootable
'IDHCPServer_restart' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_restart
'IRuntimeErrorEvent_getMessage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRuntimeErrorEvent_getMessage
'INATEngine_setNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'network', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setNetwork
'ISystemProperties_getProxyMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getProxyMode
'IHost_getMemorySize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getMemorySize
'IHostNetworkInterface_getIPV6Supported' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPV6Supported
'IHostNetworkInterface_enableDynamicIPConfig' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_enableDynamicIPConfig
'IGuestSessionStateChangedEvent_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSessionStateChangedEvent_getStatus
'IGuestSession_environmentGetBaseVariable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_environmentGetBaseVariable
'IMachine_getParavirtDebug' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getParavirtDebug
'ICloudClient_exportLaunchVM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'progress', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'virtualBox', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudClient_exportLaunchVM
'INATEngine_getTFTPNextServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getTFTPNextServer
'IVirtualBox_getHost' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getHost
'IMachine_getCPUHotPlugEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUHotPlugEnabled
'IBandwidthControl_getAllBandwidthGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthControl_getAllBandwidthGroups
'IGuestSession_processCreateEx' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'executable', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'arguments', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'environmentChanges', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:ProcessCreateFlag', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'priority', type => 'vbox:ProcessPriority', attr => {}),
      SOAP::Data->new(name => 'affinity', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IGuestSession_processCreateEx
'IGuestSession_fsObjMoveArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FsObjMoveFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjMoveArray
'IMachine_getCPUCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUCount
'IHostPCIDevicePlugEvent_getMessage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostPCIDevicePlugEvent_getMessage
'IEvent_setProcessed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEvent_setProcessed
'ISystemProperties_setDefaultMachineFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultMachineFolder', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultMachineFolder
'IMachine_setParavirtDebug' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'paravirtDebug', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setParavirtDebug
'IMachine_setGraphicsControllerType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'graphicsControllerType', type => 'vbox:GraphicsControllerType', attr => {}),
    ], # end parameters
  }, # end IMachine_setGraphicsControllerType
'INetworkAdapter_getSlot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getSlot
'IMachine_setMemorySize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'memorySize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setMemorySize
'IHostNetworkInterface_enableStaticIPConfig' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPAddress', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkMask', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_enableStaticIPConfig
'IMachineDebugger_getExecutionEngine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getExecutionEngine
'IHost_findHostDVDDrive' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostDVDDrive
'IBIOSSettings_setBootMenuMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bootMenuMode', type => 'vbox:BIOSBootMenuMode', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setBootMenuMode
'IMachine_setGuestProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setGuestProperty
'IGuestScreenInfo_getOriginY' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getOriginY
'ISession_unlockMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_unlockMachine
'IVFSExplorer_entryList' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_entryList
'IPerformanceCollector_getMetricNames' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_getMetricNames
'IMachine_getClipboardMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getClipboardMode
'IConsole_reset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_reset
'IMachine_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getState
'ISnapshot_getDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getDescription
'IGuest_getAdditionsRevision' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getAdditionsRevision
'IRecordingSettings_getScreenSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingSettings_getScreenSettings
'ICloudProvider_restoreProfiles' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_restoreProfiles
'IFramebufferOverlay_move' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFramebufferOverlay_move
'ICloudProvider_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getName
'IMachine_removeSharedFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_removeSharedFolder
'IMachineDebugger_getLogDbgFlags' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getLogDbgFlags
'IDisplay_notifyHiDPIOutputPolicyChange' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'fUnscaledHiDPI', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IDisplay_notifyHiDPIOutputPolicyChange
'ISystemProperties_getMaxInstancesOfUSBControllerType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'chipset', type => 'vbox:ChipsetType', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:USBControllerType', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxInstancesOfUSBControllerType
'IUnattended_getAuxiliaryBasePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getAuxiliaryBasePath
'IGuestUserStateChangedEvent_getStateDetails' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestUserStateChangedEvent_getStateDetails
'IVirtualBox_getFloppyImages' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getFloppyImages
'ICertificate_getExtendedKeyUsage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getExtendedKeyUsage
'IMachineDebugger_readVirtualMemory' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'address', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_readVirtualMemory
'IBandwidthGroup_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthGroup_getType
'IVirtualBox_getMachines' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getMachines
'IConsole_setUseHostClipboard' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'useHostClipboard', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IConsole_setUseHostClipboard
'IBIOSSettings_getAPICMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getAPICMode
'IVRDEServer_setAuthType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'authType', type => 'vbox:AuthType', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setAuthType
'INetworkAdapter_getAdapterType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getAdapterType
'IFramebuffer_getBytesPerLine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getBytesPerLine
'IDisplay_setScreenLayout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenLayoutMode', type => 'vbox:ScreenLayoutMode', attr => {}),
      SOAP::Data->new(name => 'guestScreenInfo', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDisplay_setScreenLayout
'IMachine_setExtraData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setExtraData
'IDnDTarget_cancel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDTarget_cancel
'IMachineDebugger_writePhysicalMemory' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'address', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bytes', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_writePhysicalMemory
'IMachine_getVRDEServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getVRDEServer
'IEvent_getSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEvent_getSource
'IFramebuffer_notify3DEvent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'data', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_notify3DEvent
'IGuestSession_processGet' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pid', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuestSession_processGet
'IAudioAdapter_getEnabledOut' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getEnabledOut
'IDnDTarget_drop' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'defaultAction', type => 'vbox:DnDAction', attr => {}),
      SOAP::Data->new(name => 'allowedActions', type => 'vbox:DnDAction', attr => {}),
      SOAP::Data->new(name => 'formats', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDTarget_drop
'IConsole_getMouse' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getMouse
'IHost_getProcessorDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorDescription
'ICloudProvider_importProfiles' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_importProfiles
'IMachine_setHWVirtExProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:HWVirtExPropertyType', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setHWVirtExProperty
'IMachine_detachDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_detachDevice
'IMachine_setFirmwareType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'firmwareType', type => 'vbox:FirmwareType', attr => {}),
    ], # end parameters
  }, # end IMachine_setFirmwareType
'ICursorPositionChangedEvent_getY' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICursorPositionChangedEvent_getY
'IUSBController_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getType
'IAppliance_getPasswordIds' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getPasswordIds
'IKeyboardLedsChangedEvent_getScrollLock' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboardLedsChangedEvent_getScrollLock
'INATNetworkPortForwardEvent_getHostPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getHostPort
'IMachine_getCPUExecutionCap' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUExecutionCap
'IUnattended_setAuxiliaryBasePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'auxiliaryBasePath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setAuxiliaryBasePath
'IUnattended_setAdditionsIsoPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'additionsIsoPath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setAdditionsIsoPath
'IMedium_reset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_reset
'INetworkAdapter_getNATNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getNATNetwork
'IGuestSession_setCurrentDirectory' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'currentDirectory', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_setCurrentDirectory
'IConsole_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getEventSource
'IGuestSession_fsObjQueryInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'followSymlinks', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjQueryInfo
'IStorageDeviceChangedEvent_getRemoved' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageDeviceChangedEvent_getRemoved
'IRecordingScreenSettings_setAudioChannels' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioChannels', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setAudioChannels
'IProgress_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getEventSource
'ISerialPort_getHostMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getHostMode
'ISystemProperties_setDefaultAdditionsISO' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultAdditionsISO', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultAdditionsISO
'IMedium_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getName
'IGuestScreenInfo_getOriginX' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getOriginX
'ISnapshot_getParent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getParent
'IDisplay_setSeamlessMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IDisplay_setSeamlessMode
'IUnattended_setExtraInstallKernelParameters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'extraInstallKernelParameters', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setExtraInstallKernelParameters
'IStorageController_setPortCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'portCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IStorageController_setPortCount
'IRecordingScreenSettings_setVideoHeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoHeight', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setVideoHeight
'IHost_findUSBDeviceByAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findUSBDeviceByAddress
'IMedium_getReadOnly' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getReadOnly
'IMedium_getProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getProperty
'IMedium_getMachineIds' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getMachineIds
'IHostNetworkInterface_getIPAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPAddress
'IMachine_nonRotationalDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'nonRotational', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_nonRotationalDevice
'IDHCPServer_removeGlobalOptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_removeGlobalOptions
'IFile_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getStatus
'IHostNetworkInterface_getNetworkName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getNetworkName
'IFsObjInfo_getObjectSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getObjectSize
'ISystemProperties_getDefaultVRDEExtPack' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultVRDEExtPack
'IMousePointerShape_getAlpha' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShape_getAlpha
'IDisplay_getScreenResolution' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_getScreenResolution
'IFramebuffer_getPixelFormat' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getPixelFormat
'IMachine_getParavirtProvider' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getParavirtProvider
'IFsObjInfo_getGroupName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getGroupName
'IKeyboard_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboard_getEventSource
'INATRedirectEvent_getGuestPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getGuestPort
'IUSBDevice_getProduct' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getProduct
'IHostNetworkInterface_getMediumType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getMediumType
'IProgress_getOperationWeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperationWeight
'IWebsessionManager_logon' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => 'username', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IWebsessionManager_logon
'IGuestProcessStateChangedEvent_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessStateChangedEvent_getStatus
'IMachine_getMonitorCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMonitorCount
'IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces
'IGuestSession_fileOpen' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accessMode', type => 'vbox:FileAccessMode', attr => {}),
      SOAP::Data->new(name => 'openAction', type => 'vbox:FileOpenAction', attr => {}),
      SOAP::Data->new(name => 'creationMode', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileOpen
'IMachine_setAllowTracingToAccessVM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'allowTracingToAccessVM', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setAllowTracingToAccessVM
'IVirtualBox_getMachineGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getMachineGroups
'IMachine_setDnDMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dnDMode', type => 'vbox:DnDMode', attr => {}),
    ], # end parameters
  }, # end IMachine_setDnDMode
'INetworkAdapter_setTraceFile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'traceFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setTraceFile
'IVRDEServer_getAuthLibrary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getAuthLibrary
'IMedium_setLocation' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setLocation
'IStorageController_getPortCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getPortCount
'IDnDSource_receiveData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDSource_receiveData
'IMachine_getTeleporterAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterAddress
'INATNetwork_removePortForwardRule' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'iSipv6', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'ruleName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_removePortForwardRule
'IMedium_getSnapshotIds' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machineId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getSnapshotIds
'IMachine_getEffectiveParavirtProvider' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getEffectiveParavirtProvider
'IRecordingScreenSettings_setAudioBits' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioBits', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setAudioBits
'ICertificate_getSignatureAlgorithmName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getSignatureAlgorithmName
'ISerialPortChangedEvent_getSerialPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPortChangedEvent_getSerialPort
'IMedium_getLastAccessError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getLastAccessError
'IKeyboardLedsChangedEvent_getCapsLock' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboardLedsChangedEvent_getCapsLock
'ICloudProfile_getProviderId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_getProviderId
'IMousePointerShape_getVisible' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShape_getVisible
'IMachine_unregister' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cleanupMode', type => 'vbox:CleanupMode', attr => {}),
    ], # end parameters
  }, # end IMachine_unregister
'INATNetwork_addLocalMapping' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostid', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end INATNetwork_addLocalMapping
'IBIOSSettings_getNonVolatileStorageFile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getNonVolatileStorageFile
'IStorageController_getMaxDevicesPerPortCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getMaxDevicesPerPortCount
'ISharedFolder_getAutoMountPoint' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_getAutoMountPoint
'IVRDEServer_setAuthLibrary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'authLibrary', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setAuthLibrary
'INATEngine_setAliasMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aliasMode', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INATEngine_setAliasMode
'INATNetworkPortForwardEvent_getCreate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getCreate
'IMachineDebugger_queryOSKernelLog' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maxMessages', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_queryOSKernelLog
'IHostNetworkInterface_enableStaticIPConfigV6' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPV6Address', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPV6NetworkMaskPrefixLength', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_enableStaticIPConfigV6
'IVRDEServer_getAuthTimeout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getAuthTimeout
'IGuest_getSessions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getSessions
'IRecordingScreenSettings_setOptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'options', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setOptions
'IGuestSession_fsObjRemove' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjRemove
'IProcess_getArguments' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getArguments
'IEmulatedUSB_webcamDetach' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEmulatedUSB_webcamDetach
'IUnattended_getScriptTemplatePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getScriptTemplatePath
'IProgress_getOperation' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperation
'IHostNetworkInterface_getNetworkMask' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getNetworkMask
'ISession_getConsole' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getConsole
'IGuestFileReadEvent_getData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileReadEvent_getData
'IMousePointerShape_getHotY' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShape_getHotY
'IDHCPServer_stop' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_stop
'ISystemProperties_setDefaultHardDiskFormat' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultHardDiskFormat', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultHardDiskFormat
'IVirtualBox_setExtraData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_setExtraData
'IProcess_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getEventSource
'IGuestSession_environmentScheduleSet' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_environmentScheduleSet
'ISystemProperties_setFreeDiskSpaceWarning' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpaceWarning', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpaceWarning
'IUSBDeviceFilter_setMaskedInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maskedInterfaces', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setMaskedInterfaces
'IBIOSSettings_setACPIEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ACPIEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setACPIEnabled
'IGuestFileStateChangedEvent_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileStateChangedEvent_getStatus
'IGuestSession_getFiles' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getFiles
'IStorageController_getInstance' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getInstance
'IMachine_getSessionState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSessionState
'IMachineDebugger_setSingleStep' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'singleStep', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setSingleStep
'IUSBDeviceFilter_setName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setName
'INATNetwork_setNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'network', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setNetwork
'IMachineDebugger_setLogEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setLogEnabled
'IConsole_removeDiskEncryptionPassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_removeDiskEncryptionPassword
'IAppliance_getMediumIdsForPasswordId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'passwordId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getMediumIdsForPasswordId
'IDHCPServer_setConfiguration' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPAddress', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkMask', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'FromIPAddress', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ToIPAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_setConfiguration
'IMachine_setPageFusionEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pageFusionEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setPageFusionEnabled
'IMachine_getLogFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getLogFolder
'IMachine_setParavirtProvider' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'paravirtProvider', type => 'vbox:ParavirtProvider', attr => {}),
    ], # end parameters
  }, # end IMachine_setParavirtProvider
'IMachine_getTracingEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTracingEnabled
'IConsole_findUSBDeviceById' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_findUSBDeviceById
'ISession_getMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getMachine
'IHostNetworkInterface_getInterfaceType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getInterfaceType
'ISystemProperties_getFreeDiskSpacePercentError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpacePercentError
'INATNetworkPortForwardEvent_getProto' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getProto
'IDHCPServer_getNetworkName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getNetworkName
'IRecordingScreenSettings_setMaxFileSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maxFileSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setMaxFileSize
'IRecordingScreenSettings_setAudioHz' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioHz', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setAudioHz
'ISystemProperties_getMaxGuestVRAM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestVRAM
'IVRDEServer_getReuseSingleConnection' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getReuseSingleConnection
'INATNetwork_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setEnabled
'INetworkAdapter_getAttachmentType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getAttachmentType
'IFsObjInfo_getGID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getGID
'IRecordingScreenSettings_getVideoCodec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getVideoCodec
'IMachine_querySavedScreenshotInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_querySavedScreenshotInfo
'ISystemProperties_getMaxGuestRAM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestRAM
'IStorageController_getBus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getBus
'IMachine_deleteGuestProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_deleteGuestProperty
'IConsole_sleepButton' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_sleepButton
'ISharedFolderChangedEvent_getScope' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolderChangedEvent_getScope
'IConsole_pause' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_pause
'IMachineDebugger_getRecompileUser' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getRecompileUser
'IVirtualBox_getGuestOSType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getGuestOSType
'IEventSource_unregisterListener' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'listener', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEventSource_unregisterListener
'IGuestSession_getEnvironmentBase' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getEnvironmentBase
'IUnattended_getUser' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getUser
'IMachineDebugger_getStats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pattern', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'withDescriptions', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getStats
'IMachineRegisteredEvent_getRegistered' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineRegisteredEvent_getRegistered
'IVirtualBox_getPackageType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getPackageType
'IMachine_getUSBProxyAvailable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getUSBProxyAvailable
'IPerformanceMetric_getMetricName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getMetricName
'IRecordingScreenSettings_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getId
'IUSBDeviceFilter_setRemote' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'remote', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setRemote
'IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'IGuestMultiTouchEvent_getYPositions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMultiTouchEvent_getYPositions
'INATNetworkSettingEvent_getNeedDhcpServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkSettingEvent_getNeedDhcpServer
'IMachine_deleteSnapshotRange' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'startId', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'endId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_deleteSnapshotRange
'IMachine_setFaultToleranceState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'faultToleranceState', type => 'vbox:FaultToleranceState', attr => {}),
    ], # end parameters
  }, # end IMachine_setFaultToleranceState
'IHostUSBDevice_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostUSBDevice_getState
'IMachine_setIOCacheSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOCacheSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setIOCacheSize
'IGuestSession_getProtocolVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getProtocolVersion
'IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfaces
'IDisplay_invalidateAndUpdate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDisplay_invalidateAndUpdate
'IGuestMouseEvent_getButtons' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMouseEvent_getButtons
'INATNetwork_addPortForwardRule' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'isIpv6', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'ruleName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'proto', type => 'vbox:NATProtocol', attr => {}),
      SOAP::Data->new(name => 'hostIP', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPort', type => 'xsd:unsignedShort', attr => {}),
      SOAP::Data->new(name => 'guestIP', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'guestPort', type => 'xsd:unsignedShort', attr => {}),
    ], # end parameters
  }, # end INATNetwork_addPortForwardRule
'ISystemProperties_getDefaultMachineFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultMachineFolder
'IUnattended_getPostInstallScriptTemplatePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getPostInstallScriptTemplatePath
'IConsole_getDisplay' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getDisplay
'IVirtualBox_getAPIVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getAPIVersion
'ICloudProvider_prepareUninstall' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_prepareUninstall
'IDisplay_invalidateAndUpdateScreen' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_invalidateAndUpdateScreen
'IMachine_readSavedThumbnailToArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bitmapFormat', type => 'vbox:BitmapFormat', attr => {}),
    ], # end parameters
  }, # end IMachine_readSavedThumbnailToArray
'IUnattended_setFullUserName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'fullUserName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setFullUserName
'IMachine_setHPETEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'HPETEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setHPETEnabled
'IPCIAddress_setDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:short', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_setDevice
'ISystemProperties_getProxyURL' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getProxyURL
'IFile_querySize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_querySize
'IRecordingScreenSettings_setMaxTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maxTime', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setMaxTime
'IUSBDeviceFilters_getDeviceFilters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilters_getDeviceFilters
'IHost_getVideoInputDevices' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getVideoInputDevices
'IMachine_setAutostartEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autostartEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setAutostartEnabled
'IVirtualBox_createAppliance' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createAppliance
'IFile_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getEventSource
'ISnapshot_getOnline' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getOnline
'IMachineDebugger_getUptime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getUptime
'ISystemProperties_getParallelPortCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getParallelPortCount
'ISystemProperties_getDefaultIoCacheSettingForStorageController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerType', type => 'vbox:StorageControllerType', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultIoCacheSettingForStorageController
'IRecordingScreenSettings_getMaxFileSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getMaxFileSize
'IPerformanceCollector_queryMetricsData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_queryMetricsData
'IStateChangedEvent_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStateChangedEvent_getState
'IMediumRegisteredEvent_getRegistered' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumRegisteredEvent_getRegistered
'IDHCPServer_getLowerIP' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getLowerIP
'ISystemProperties_getDefaultAudioDriver' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultAudioDriver
'IProgress_getPercent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getPercent
'IRecordingSettings_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingSettings_getEnabled
'IToken_abandon' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IToken_abandon
'IMachine_setIcon' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'icon', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setIcon
'IVirtualBox_getSharedFolders' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getSharedFolders
'IMachine_setChipsetType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'chipsetType', type => 'vbox:ChipsetType', attr => {}),
    ], # end parameters
  }, # end IMachine_setChipsetType
'IGuest_getAdditionsVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getAdditionsVersion
'IPerformanceCollector_enableMetrics' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_enableMetrics
'IMachine_setMemoryBalloonSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'memoryBalloonSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setMemoryBalloonSize
'IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'ISharedFolder_getLastAccessError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_getLastAccessError
'IGuestProcessEvent_getProcess' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessEvent_getProcess
'ICloudProvider_createProfile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'profileName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'values', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_createProfile
'IEventSource_eventProcessed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'listener', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'event', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEventSource_eventProcessed
'IMachine_getHardwareVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getHardwareVersion
'IVirtualSystemDescription_getDescriptionByType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:VirtualSystemDescriptionType', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getDescriptionByType
'IMachine_createSharedFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'automount', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'autoMountPoint', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_createSharedFolder
'INATEngine_getHostIP' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getHostIP
'ISerialPort_getIOBase' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getIOBase
'IGuestSession_symlinkRead' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'symlink', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:SymlinkReadFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_symlinkRead
'IVirtualBox_createMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accessMode', type => 'vbox:AccessMode', attr => {}),
      SOAP::Data->new(name => 'aDeviceTypeType', type => 'vbox:DeviceType', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createMedium
'INetworkAdapter_getBridgedInterface' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getBridgedInterface
'IAudioAdapter_getAudioController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getAudioController
'IAppliance_interpret' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_interpret
'IConsole_attachUSBDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'captureFilename', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_attachUSBDevice
'INATNetworkSettingEvent_getGateway' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkSettingEvent_getGateway
'IGuestMouseEvent_getMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMouseEvent_getMode
'IBandwidthGroup_getMaxBytesPerSec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthGroup_getMaxBytesPerSec
'IMousePointerShapeChangedEvent_getYhot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShapeChangedEvent_getYhot
'INetworkAdapterChangedEvent_getNetworkAdapter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapterChangedEvent_getNetworkAdapter
'IVirtualBox_getVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getVersion
'IUnattended_setMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machine', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setMachine
'IMachineDebugger_unloadPlugIn' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_unloadPlugIn
'IMouseCapabilityChangedEvent_getSupportsRelative' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouseCapabilityChangedEvent_getSupportsRelative
'INATNetwork_getIPv6Enabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getIPv6Enabled
'IDHCPServer_addGlobalOption' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'option', type => 'vbox:DhcpOpt', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_addGlobalOption
'IFsObjInfo_getHardLinks' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getHardLinks
'IGuestSession_directoryRemove' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryRemove
'INetworkAdapter_getBootPriority' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getBootPriority
'IFile_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getId
'IUnattended_getDetectedOSLanguages' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getDetectedOSLanguages
'IMachine_setAutostopType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autostopType', type => 'vbox:AutostopType', attr => {}),
    ], # end parameters
  }, # end IMachine_setAutostopType
'ICloudProvider_saveProfiles' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_saveProfiles
'IVirtualBox_findMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'nameOrId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findMachine
'IUSBDevice_getRemote' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getRemote
'IUSBDevice_getBackend' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getBackend
'IMachineEvent_getMachineId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineEvent_getMachineId
'IRecordingScreenSettings_setVideoScalingMethod' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoScalingMethod', type => 'vbox:RecordingVideoScalingMethod', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setVideoScalingMethod
'INATNetworkStartStopEvent_getStartEvent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkStartStopEvent_getStartEvent
'ISystemProperties_getFreeDiskSpaceWarning' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpaceWarning
'IRecordingScreenSettings_getVideoHeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getVideoHeight
'IHostNetworkInterface_getWireless' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getWireless
'ISnapshotEvent_getSnapshotId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshotEvent_getSnapshotId
'IVetoEvent_getApprovals' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVetoEvent_getApprovals
'IMedium_getBase' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getBase
'IProgress_cancel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_cancel
'IMedium_close' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_close
'IProgress_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getId
'IMachine_setPointingHIDType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pointingHIDType', type => 'vbox:PointingHIDType', attr => {}),
    ], # end parameters
  }, # end IMachine_setPointingHIDType
'IMedium_getProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getProperties
'IMachine_getTracingConfig' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTracingConfig
'IDHCPServer_getVmConfigs' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getVmConfigs
'IMedium_getHostDrive' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getHostDrive
'IUSBDevice_getVendorId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getVendorId
'IMachine_takeSnapshot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pause', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_takeSnapshot
'IGuest_internalGetStatistics' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_internalGetStatistics
'IAudioAdapter_getAudioCodec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getAudioCodec
'IVFSExplorer_cdUp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_cdUp
'IMachine_getRecordingSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getRecordingSettings
'INATEngine_getTFTPBootFile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getTFTPBootFile
'IGuestSession_fsObjMove' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FsObjMoveFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjMove
'IGuestSession_getDomain' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getDomain
'IExtraDataChangedEvent_getValue' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IExtraDataChangedEvent_getValue
'IDirectory_read' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDirectory_read
'IMouse_getMultiTouchSupported' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getMultiTouchSupported
'IKeyboard_putScancodes' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'scancodes', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IKeyboard_putScancodes
'INATNetwork_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getEventSource
'IVRDEServer_setAllowMultiConnection' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'allowMultiConnection', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setAllowMultiConnection
'IMachineDebugger_getExecuteAllInIEM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getExecuteAllInIEM
'IUSBDeviceFilter_getManufacturer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getManufacturer
'INATNetwork_getNetworkName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getNetworkName
'IMachine_hotPlugCPU' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpu', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_hotPlugCPU
'IMachine_getLastStateChange' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getLastStateChange
'IGuestSession_fileCreateTemp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'templateName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mode', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'secure', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileCreateTemp
'IUSBDevice_getAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getAddress
'IRecordingScreenSettings_setVideoFPS' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoFPS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setVideoFPS
'IMachineDebugger_getHWVirtExEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getHWVirtExEnabled
'IMachine_setName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setName
'IUnattended_getCountry' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getCountry
'IMouse_getRelativeSupported' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getRelativeSupported
'IMachine_getKeyboardHIDType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getKeyboardHIDType
'IConsole_powerButton' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerButton
'IConsole_getGuestEnteredACPIMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getGuestEnteredACPIMode
'IHost_getProcessorCoreCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorCoreCount
'IUnattended_setPostInstallCommand' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'postInstallCommand', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setPostInstallCommand
'IMousePointerShapeChangedEvent_getVisible' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShapeChangedEvent_getVisible
'IEventSourceChangedEvent_getAdd' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEventSourceChangedEvent_getAdd
'INATEngine_setTFTPNextServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'TFTPNextServer', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setTFTPNextServer
'IMedium_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getId
'IGuestSession_fsObjExists' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'followSymlinks', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjExists
'IExtraDataCanChangeEvent_getKey' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IExtraDataCanChangeEvent_getKey
'IMachine_getUSBDeviceFilters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getUSBDeviceFilters
'IMachine_setTeleporterPassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterPassword', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterPassword
'ICloudProfile_getProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_getProperties
'IGuestMouseEvent_getW' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMouseEvent_getW
'IVirtualBox_createMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settingsFile', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'groups', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'osTypeId', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createMachine
'IMedium_getMediumFormat' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getMediumFormat
'INetworkAdapter_setPromiscModePolicy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'promiscModePolicy', type => 'vbox:NetworkAdapterPromiscModePolicy', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setPromiscModePolicy
'IAudioAdapter_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setEnabled
'IDnDBase_getProtocolVersion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDBase_getProtocolVersion
'IHostUSBDeviceFilter_setAction' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'action', type => 'vbox:USBDeviceFilterAction', attr => {}),
    ], # end parameters
  }, # end IHostUSBDeviceFilter_setAction
'INATEngine_setTFTPBootFile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'TFTPBootFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setTFTPBootFile
'IPerformanceMetric_getMaximumValue' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getMaximumValue
'IUnattended_prepare' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_prepare
'ICloudProvider_getProfileByName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'profileName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getProfileByName
'IHost_generateMACAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_generateMACAddress
'IEventListener_handleEvent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'event', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEventListener_handleEvent
'INetworkAdapter_getLineSpeed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getLineSpeed
'IRecordingScreenSettings_getAudioBits' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getAudioBits
'IRuntimeErrorEvent_getFatal' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRuntimeErrorEvent_getFatal
'IFile_getInitialSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getInitialSize
'IGuestSession_getTimeout' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getTimeout
'IMachine_getStorageControllers' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getStorageControllers
'IMachine_setVMProcessPriority' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'VMProcessPriority', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setVMProcessPriority
'IGuestSession_directoryCopyFromGuest' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:DirectoryCopyFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryCopyFromGuest
'IUnattended_getHostname' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getHostname
'IBIOSSettings_setAPICMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'APICMode', type => 'vbox:APICMode', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setAPICMode
'IMachine_getParallelPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getParallelPort
'IGuestSession_fileCopyToGuest' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FileCopyFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fileCopyToGuest
'IMachine_setAccelerate2DVideoEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accelerate2DVideoEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setAccelerate2DVideoEnabled
'IHostNetworkInterface_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getId
'IFile_read' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'toRead', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFile_read
'IGuestFileEvent_getFile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileEvent_getFile
'IHostNetworkInterface_getDHCPEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getDHCPEnabled
'INetworkAdapter_getProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getProperty
'IMachine_getSharedFolders' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSharedFolders
'IRecordingScreenSettings_setFeatures' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'features', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setFeatures
'ICertificate_getValidityPeriodNotAfter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getValidityPeriodNotAfter
'IVirtualBox_getGuestOSTypes' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getGuestOSTypes
'IDnDTarget_move' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'defaultAction', type => 'vbox:DnDAction', attr => {}),
      SOAP::Data->new(name => 'allowedActions', type => 'vbox:DnDAction', attr => {}),
      SOAP::Data->new(name => 'formats', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDTarget_move
'IConsole_getVRDEServerInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getVRDEServerInfo
'IParallelPort_getIRQ' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getIRQ
'IBIOSSettings_getLogoFadeIn' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoFadeIn
'IMousePointerShape_getHotX' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShape_getHotX
'IGuest_getDnDSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getDnDSource
'IGuest_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getEventSource
'IUnattended_getIsoPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getIsoPath
'IMachine_removeCPUIDLeaf' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'idx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'idxSub', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_removeCPUIDLeaf
'IMachine_getStateFilePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getStateFilePath
'IVRDEServer_getVRDEExtPack' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getVRDEExtPack
'IUSBDeviceFilter_setVendorId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'vendorId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setVendorId
'ISystemProperties_setDefaultFrontend' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultFrontend', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultFrontend
'IUnattended_getDetectedOSTypeId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getDetectedOSTypeId
'IFile_readAt' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'toRead', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFile_readAt
'IEventSourceChangedEvent_getListener' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEventSourceChangedEvent_getListener
'IProgressPercentageChangedEvent_getPercent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgressPercentageChangedEvent_getPercent
'IMediumIO_close' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumIO_close
'IDnDTarget_sendData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'data', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDTarget_sendData
'INetworkAdapter_getHostOnlyInterface' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getHostOnlyInterface
'IVFSExplorer_getPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_getPath
'IGuestScreenInfo_getOrigin' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getOrigin
'IGuest_getMemoryBalloonSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getMemoryBalloonSize
'IMachine_setSettingsFilePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settingsFilePath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setSettingsFilePath
'IMachine_getPointingHIDType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getPointingHIDType
'IMachine_getAccessError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccessError
'ISystemProperties_getInfoVDSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getInfoVDSize
'IVRDEServer_getAllowMultiConnection' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getAllowMultiConnection
'IMachine_canShowConsoleWindow' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_canShowConsoleWindow
'IFsObjInfo_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getType
'INetworkAdapter_setTraceEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'traceEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setTraceEnabled
'IGuest_findSession' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'sessionName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_findSession
'INATEngine_setDNSProxy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'DNSProxy', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATEngine_setDNSProxy
'IVirtualSystemDescription_getValuesByType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:VirtualSystemDescriptionType', attr => {}),
      SOAP::Data->new(name => 'which', type => 'vbox:VirtualSystemDescriptionValueType', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getValuesByType
'IUSBProxyBackend_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBProxyBackend_getType
'IProgress_waitForOperationCompletion' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'operation', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IProgress_waitForOperationCompletion
'IUSBDeviceFilter_setActive' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'active', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setActive
'IHostPCIDevicePlugEvent_getSuccess' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostPCIDevicePlugEvent_getSuccess
'IVetoEvent_isVetoed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVetoEvent_isVetoed
'IMachine_setCPUExecutionCap' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CPUExecutionCap', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUExecutionCap
'IRecordingScreenSettings_setDestination' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'vbox:RecordingDestination', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setDestination
'ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces
'IMachineDebugger_getHWVirtExNestedPagingEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getHWVirtExNestedPagingEnabled
'ISerialPort_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getEnabled
'IMedium_getDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getDescription
'IVirtualBox_getCloudProviderManager' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getCloudProviderManager
'IFsObjInfo_getFileAttributes' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getFileAttributes
'IMachine_getMediumAttachments' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMediumAttachments
'IParallelPort_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setEnabled
'IFile_getAccessMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getAccessMode
'IFramebufferOverlay_setVisible' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'visible', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IFramebufferOverlay_setVisible
'INATEngine_addRedirect' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'proto', type => 'vbox:NATProtocol', attr => {}),
      SOAP::Data->new(name => 'hostIP', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPort', type => 'xsd:unsignedShort', attr => {}),
      SOAP::Data->new(name => 'guestIP', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'guestPort', type => 'xsd:unsignedShort', attr => {}),
    ], # end parameters
  }, # end INATEngine_addRedirect
'ISystemProperties_getExclusiveHwVirt' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getExclusiveHwVirt
'INetworkAdapter_setHostOnlyInterface' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostOnlyInterface', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setHostOnlyInterface
'IVirtualBox_findDHCPServerByNetworkName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findDHCPServerByNetworkName
'IUnattended_getTimeZone' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getTimeZone
'ISession_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getName
'IProgress_getDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getDescription
'IConsole_resume' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_resume
'IHost_getOperatingSystem' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getOperatingSystem
'IGuestProcessEvent_getPid' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessEvent_getPid
'IEvent_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEvent_getType
'IRecordingSettings_getScreens' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingSettings_getScreens
'IMousePointerShapeChangedEvent_getWidth' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShapeChangedEvent_getWidth
'IMachine_queryLogFilename' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'idx', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_queryLogFilename
'IMachine_getAudioAdapter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAudioAdapter
'INetworkAdapter_setProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setProperty
'IBandwidthGroup_setMaxBytesPerSec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maxBytesPerSec', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IBandwidthGroup_setMaxBytesPerSec
'IMachineDebugger_setExecuteAllInIEM' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'executeAllInIEM', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setExecuteAllInIEM
'IUnattended_getPostInstallCommand' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getPostInstallCommand
'IMousePointerShapeChangedEvent_getHeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShapeChangedEvent_getHeight
'ICloudProvider_getPropertyDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getPropertyDescription
'IVirtualBox_setSettingsSecret' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_setSettingsSecret
'IHost_getMemoryAvailable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getMemoryAvailable
'IDnDBase_isFormatSupported' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDBase_isFormatSupported
'IVirtualBox_getVersionNormalized' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getVersionNormalized
'IUnattended_getImageIndex' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getImageIndex
'INATEngine_getDNSUseHostResolver' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getDNSUseHostResolver
'IFramebuffer_getCapabilities' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getCapabilities
'IGuestSession_directoryCreateTemp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'templateName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mode', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'secure', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryCreateTemp
'IStorageController_setInstance' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'instance', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IStorageController_setInstance
'IMachine_getBIOSSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getBIOSSettings
'IMachine_getSessionPID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSessionPID
'IMachine_setEmulatedUSBCardReaderEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'emulatedUSBCardReaderEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setEmulatedUSBCardReaderEnabled
'IFile_getCreationMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFile_getCreationMode
'ISession_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getType
'IUnattended_getProxy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getProxy
'IBIOSSettings_setTimeOffset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeOffset', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setTimeOffset
'IMedium_getType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getType
'IMachine_getCPUProfile' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUProfile
'IDHCPServer_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getEnabled
'IParallelPort_getPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getPath
'IStorageController_setUseHostIOCache' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'useHostIOCache', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IStorageController_setUseHostIOCache
'IMachine_setTracingEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'tracingEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setTracingEnabled
'IRecordingScreenSettings_getMaxTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getMaxTime
'IMachine_getDefaultFrontend' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getDefaultFrontend
'INetworkAdapter_getInternalNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getInternalNetwork
'ICertificate_queryInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'what', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end ICertificate_queryInfo
'IUnattended_setProductKey' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'productKey', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setProductKey
'IMedium_getParent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getParent
'IGuestSession_fsObjSetACL' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'followSymlinks', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'acl', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mode', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjSetACL
'IGuestMultiTouchEvent_getContactFlags' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMultiTouchEvent_getContactFlags
'IDHCPServer_getVmSlotOptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'vmname', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getVmSlotOptions
'IMachineDebugger_getLogRelGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getLogRelGroups
'IMediumIO_read' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMediumIO_read
'IProcess_waitFor' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'waitFor', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProcess_waitFor
'INATNetwork_getLoopbackIp6' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getLoopbackIp6
'IPCIAddress_fromLong' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'number', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_fromLong
'IBIOSSettings_getLogoFadeOut' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoFadeOut
'IMediumFormat_describeFileExtensions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_describeFileExtensions
'ICertificate_getSubjectPublicKey' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getSubjectPublicKey
'IMachine_launchVMProcess' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'session', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'environment', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_launchVMProcess
'IUnattended_getInstallTestExecService' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getInstallTestExecService
'IAppliance_write' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'options', type => 'vbox:ExportOptions', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_write
'IKeyboardLedsChangedEvent_getNumLock' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboardLedsChangedEvent_getNumLock
'IHost_findHostFloppyDrive' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostFloppyDrive
'IVirtualBox_getExtraDataKeys' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getExtraDataKeys
'IProcess_getExecutablePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getExecutablePath
'IMachine_getCPUIDLeafByOrdinal' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ordinal', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUIDLeafByOrdinal
'IConsole_getDeviceActivity' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:DeviceType', attr => {}),
    ], # end parameters
  }, # end IConsole_getDeviceActivity
'IMachine_setCPUIDLeaf' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'idx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'idxSub', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEax', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEbx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEcx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEdx', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUIDLeaf
'IMachine_lockMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'session', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lockType', type => 'vbox:LockType', attr => {}),
    ], # end parameters
  }, # end IMachine_lockMachine
'IDnDBase_getFormats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDBase_getFormats
'IMouse_getPointerShape' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getPointerShape
'IMachine_getGroups' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGroups
'IFsObjInfo_getChangeTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getChangeTime
'IDHCPServer_getMacOptions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mac', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getMacOptions
'IAppliance_importMachines' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'options', type => 'vbox:ImportOptions', attr => {}),
    ], # end parameters
  }, # end IAppliance_importMachines
'IHost_getFloppyDrives' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getFloppyDrives
'IGuestSessionEvent_getSession' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSessionEvent_getSession
'INATNetworkPortForwardEvent_getIpv6' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getIpv6
'IMediumIO_getWritable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumIO_getWritable
'ISystemProperties_getScreenShotFormats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getScreenShotFormats
'IMachine_getVMProcessPriority' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getVMProcessPriority
'ICloudProfile_setName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_setName
'IUSBDeviceFilter_setSerialNumber' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'serialNumber', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setSerialNumber
'ISharedFolder_getWritable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_getWritable
'ISerialPort_setPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setPath
'IGuestSession_directoryCopyToGuest' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:DirectoryCopyFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryCopyToGuest
'IMediumIO_convertToStream' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
      SOAP::Data->new(name => 'bufferSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMediumIO_convertToStream
'IUSBDeviceFilter_setPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'port', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setPort
'IMachineDebugger_getCSAMEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getCSAMEnabled
'IVRDEServer_setReuseSingleConnection' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'reuseSingleConnection', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setReuseSingleConnection
'IProgress_getCompleted' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getCompleted
'IUnattended_setTimeZone' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeZone', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setTimeZone
'IGuestSession_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getId
'IMouse_getAbsoluteSupported' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getAbsoluteSupported
'INATNetworkCreationDeletionEvent_getCreationEvent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkCreationDeletionEvent_getCreationEvent
'IGuestMonitorChangedEvent_getOriginY' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMonitorChangedEvent_getOriginY
'IGuestMouseEvent_getX' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMouseEvent_getX
'IGuest_getFacilityStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'facility', type => 'vbox:AdditionsFacilityType', attr => {}),
    ], # end parameters
  }, # end IGuest_getFacilityStatus
'IGuest_setCredentials' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'userName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'domain', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'allowInteractiveLogon', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuest_setCredentials
'IVirtualBox_getSystemProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getSystemProperties
'IGuestScreenInfo_getScreenId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getScreenId
'IMachine_getMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_getMedium
'ISystemProperties_getFreeDiskSpacePercentWarning' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpacePercentWarning
'IMachine_setAutoDiscardForDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'discard', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setAutoDiscardForDevice
'IVirtualBox_createDHCPServer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createDHCPServer
'IVetoEvent_getVetos' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVetoEvent_getVetos
'IGuestFileRegisteredEvent_getRegistered' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileRegisteredEvent_getRegistered
'IMachineDebugger_getPATMEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getPATMEnabled
'IMousePointerShape_getShape' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShape_getShape
'IMouseCapabilityChangedEvent_getSupportsMultiTouch' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouseCapabilityChangedEvent_getSupportsMultiTouch
'IMediumConfigChangedEvent_getMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumConfigChangedEvent_getMedium
'IHost_getProcessorOnlineCoreCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorOnlineCoreCount
'IMachine_getAutostartEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAutostartEnabled
'IGuest_setStatisticsUpdateInterval' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'statisticsUpdateInterval', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuest_setStatisticsUpdateInterval
'ICursorPositionChangedEvent_getX' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICursorPositionChangedEvent_getX
'IMachine_getAccelerate3DEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccelerate3DEnabled
'IUnattended_getPackageSelectionAdjustments' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getPackageSelectionAdjustments
'ICloudProfile_setProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'values', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_setProperties
'INATNetworkPortForwardEvent_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getName
'IMachine_getBandwidthControl' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getBandwidthControl
'IMachineDebugger_setRecompileUser' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'recompileUser', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setRecompileUser
'IDHCPServer_getUpperIP' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getUpperIP
'IFramebuffer_getBitsPerPixel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getBitsPerPixel
'IMachine_getCurrentSnapshot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCurrentSnapshot
'IMachine_getStorageControllerByInstance' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'connectionType', type => 'vbox:StorageBus', attr => {}),
      SOAP::Data->new(name => 'instance', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getStorageControllerByInstance
'ICertificate_getSignatureAlgorithmOID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getSignatureAlgorithmOID
'IMachine_deleteConfig' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'media', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_deleteConfig
'IDirectory_getDirectoryName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDirectory_getDirectoryName
'IDnDSource_dragIsPending' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDnDSource_dragIsPending
'IEventSource_getEvent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'listener', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IEventSource_getEvent
'IMachine_getSettingsModified' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSettingsModified
'IUnattended_setProxy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'proxy', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setProxy
'IGuestPropertyChangedEvent_getFlags' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestPropertyChangedEvent_getFlags
'IEmulatedUSB_webcamAttach' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settings', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEmulatedUSB_webcamAttach
'ICloudProfile_remove' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_remove
'IVirtualBox_openMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'deviceType', type => 'vbox:DeviceType', attr => {}),
      SOAP::Data->new(name => 'accessMode', type => 'vbox:AccessMode', attr => {}),
      SOAP::Data->new(name => 'forceNewUuid', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openMedium
'IHost_getSearchStrings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getSearchStrings
'IMachine_getRTCUseUTC' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getRTCUseUTC
'INetworkAdapter_setAttachmentType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'attachmentType', type => 'vbox:NetworkAttachmentType', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setAttachmentType
'IEventSource_createAggregator' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'subordinates', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEventSource_createAggregator
'INATRedirectEvent_getRemove' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getRemove
'IVetoEvent_addVeto' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'reason', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVetoEvent_addVeto
'IMousePointerShapeChangedEvent_getAlpha' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMousePointerShapeChangedEvent_getAlpha
'IMachine_setCPUProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:CPUPropertyType', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUProperty
'IVirtualBox_getHomeFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getHomeFolder
'IGuestPropertyChangedEvent_getValue' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestPropertyChangedEvent_getValue
'IConsole_powerDown' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerDown
'IGuestSession_getPathStyle' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getPathStyle
'IMediumFormat_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_getName
'IBIOSSettings_setPXEDebugEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'PXEDebugEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setPXEDebugEnabled
'IMachineDebugger_modifyLogFlags' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settings', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_modifyLogFlags
'IMachineDebugger_getVirtualTimeRate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getVirtualTimeRate
'IMachine_setDefaultFrontend' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultFrontend', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setDefaultFrontend
'IMachine_setSnapshotFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'snapshotFolder', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setSnapshotFolder
'IConsole_addDiskEncryptionPassword' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'clearOnSuspend', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IConsole_addDiskEncryptionPassword
'IUSBDeviceFilter_getMaskedInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getMaskedInterfaces
'IDHCPServer_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_setEnabled
'IUnattended_setInstallGuestAdditions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'installGuestAdditions', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IUnattended_setInstallGuestAdditions
'ISession_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getState
'IGuestSession_fsObjRemoveArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjRemoveArray
'ISystemProperties_setVRDEAuthLibrary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'VRDEAuthLibrary', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setVRDEAuthLibrary
'IUSBController_setName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_setName
'IReusableEvent_reuse' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IReusableEvent_reuse
'ICloudProfile_createCloudClient' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_createCloudClient
'IMachine_querySavedGuestScreenInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_querySavedGuestScreenInfo
'IParallelPort_getIOBase' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getIOBase
'IMachineDebugger_modifyLogDestinations' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settings', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_modifyLogDestinations
'IRecordingScreenSettings_isFeatureEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'feature', type => 'vbox:RecordingFeature', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_isFeatureEnabled
'IGuestFileIOEvent_getProcessed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileIOEvent_getProcessed
'ICloudProfile_getProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_getProperty
'IUSBDeviceFilter_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getName
'IVirtualBox_getHardDisks' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getHardDisks
'IGuest_setMemoryBalloonSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'memoryBalloonSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuest_setMemoryBalloonSize
'IDisplay_detachScreens' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenIds', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IDisplay_detachScreens
'INATEngine_getDNSPassDomain' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getDNSPassDomain
'IMachineDebugger_getRecompileSupervisor' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getRecompileSupervisor
'IWebsessionManager_getSessionObject' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => 'refIVirtualBox', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IWebsessionManager_getSessionObject
'IMachineDataChangedEvent_getTemporary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDataChangedEvent_getTemporary
'IHost_getProcessorOnlineCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorOnlineCount
'IProgress_getErrorInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getErrorInfo
'IPerformanceMetric_getPeriod' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getPeriod
'IMachine_attachDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:DeviceType', attr => {}),
      SOAP::Data->new(name => 'medium', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_attachDevice
'IUnattended_constructMedia' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_constructMedia
'IConsole_getUSBDevices' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getUSBDevices
'IVirtualBox_checkFirmwarePresent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'firmwareType', type => 'vbox:FirmwareType', attr => {}),
      SOAP::Data->new(name => 'version', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_checkFirmwarePresent
'ISerialPort_getPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getPath
'IMachine_removeStorageController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_removeStorageController
'IUnattended_getDetectedOSFlavor' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getDetectedOSFlavor
'IGuestMultiTouchEvent_getXPositions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMultiTouchEvent_getXPositions
'IRecordingScreenSettings_getVideoWidth' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getVideoWidth
'IUSBDeviceFilter_setProduct' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'product', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setProduct
'IGuestSession_symlinkCreate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'symlink', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:SymlinkType', attr => {}),
    ], # end parameters
  }, # end IGuestSession_symlinkCreate
'IMedium_setAutoReset' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autoReset', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMedium_setAutoReset
'IMachine_getSnapshotFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSnapshotFolder
'IDisplay_notifyScaleFactorChange' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'u32ScaleFactorWMultiplied', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'u32ScaleFactorHMultiplied', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_notifyScaleFactorChange
'IMachine_getHardwareUUID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getHardwareUUID
'ICertificate_isCurrentlyExpired' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_isCurrentlyExpired
'IGuestMonitorChangedEvent_getHeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMonitorChangedEvent_getHeight
'IStorageController_getBootable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getBootable
'IMachineDebugger_detectOS' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_detectOS
'ISystemProperties_getLoggingLevel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getLoggingLevel
'IDnDBase_removeFormats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'formats', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDBase_removeFormats
'IHostNetworkInterface_getHardwareAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getHardwareAddress
'IMachine_setCPUIDPortabilityLevel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CPUIDPortabilityLevel', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUIDPortabilityLevel
'IEventSource_registerListener' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'listener', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'interesting', type => 'vbox:VBoxEventType', attr => {}),
      SOAP::Data->new(name => 'active', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IEventSource_registerListener
'ICertificate_getSerialNumber' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getSerialNumber
'IUSBDeviceFilter_getVendorId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getVendorId
'IGuestMultiTouchEvent_getContactIds' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMultiTouchEvent_getContactIds
'IVirtualBoxErrorInfo_getComponent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getComponent
'IGuest_getOSTypeId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getOSTypeId
'ISnapshot_getChildren' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getChildren
'IUSBDeviceFilter_getProductId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getProductId
'IMachine_getFaultToleranceState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getFaultToleranceState
'IUnattended_getInstallGuestAdditions' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getInstallGuestAdditions
'IMachine_mountMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'medium', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'force', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_mountMedium
'IGuest_getFacilities' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getFacilities
'IGuestMultiTouchEvent_getScanTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMultiTouchEvent_getScanTime
'IDisplay_takeScreenShotToArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bitmapFormat', type => 'vbox:BitmapFormat', attr => {}),
    ], # end parameters
  }, # end IDisplay_takeScreenShotToArray
'IGuestSession_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getName
'IUnattended_setHostname' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostname', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setHostname
'ICertificate_getIssuerName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getIssuerName
'IGuestFileStateChangedEvent_getError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileStateChangedEvent_getError
'INATNetwork_setLoopbackIp6' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'loopbackIp6', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setLoopbackIp6
'IMachine_setBootOrder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'device', type => 'vbox:DeviceType', attr => {}),
    ], # end parameters
  }, # end IMachine_setBootOrder
'IRecordingScreenSettings_getAudioHz' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getAudioHz
'ICloudProfile_setProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProfile_setProperty
'IVirtualBox_createSharedFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'automount', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'autoMountPoint', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createSharedFolder
'IKeyboard_getKeyboardLEDs' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboard_getKeyboardLEDs
'INetworkAdapter_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setEnabled
'IMachine_getMemoryBalloonSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMemoryBalloonSize
'IMachine_getPageFusionEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getPageFusionEnabled
'IBIOSSettings_setLogoFadeIn' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoFadeIn', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoFadeIn
'IFsObjInfo_getNodeIdDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getNodeIdDevice
'IAppliance_getDisks' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getDisks
'IHostNetworkInterface_getShortName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getShortName
'IMachine_getDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getDescription
'IVirtualBox_createUnattendedInstaller' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createUnattendedInstaller
'IGuestMouseEvent_getZ' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMouseEvent_getZ
'IUnattended_setIsoPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'isoPath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setIsoPath
'ICertificate_getExpired' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getExpired
'IGuestMonitorChangedEvent_getWidth' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMonitorChangedEvent_getWidth
'IMachine_getParent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getParent
'IGuestSession_getEventSource' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getEventSource
'IGuestMonitorChangedEvent_getScreenId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMonitorChangedEvent_getScreenId
'IMediumIO_write' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'data', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumIO_write
'IMedium_getEncryptionSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getEncryptionSettings
'IGuestSession_environmentDoesBaseVariableExist' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_environmentDoesBaseVariableExist
'IMachine_getUSBControllerByName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getUSBControllerByName
'IUSBDevice_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getId
'ISystemProperties_getDefaultFrontend' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultFrontend
'IMediumFormat_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_getId
'IHostPCIDevicePlugEvent_getAttachment' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostPCIDevicePlugEvent_getAttachment
'IMachine_setAccelerate3DEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accelerate3DEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setAccelerate3DEnabled
'IVirtualBox_removeSharedFolder' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_removeSharedFolder
'IProcess_getEnvironment' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_getEnvironment
'IHostVideoInputDevice_getAlias' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostVideoInputDevice_getAlias
'IDHCPServer_getIPAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getIPAddress
'IGuestUserStateChangedEvent_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestUserStateChangedEvent_getName
'IGuest_getAdditionsStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'level', type => 'vbox:AdditionsRunLevelType', attr => {}),
    ], # end parameters
  }, # end IGuest_getAdditionsStatus
'IDisplay_attachFramebuffer' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'framebuffer', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDisplay_attachFramebuffer
'IMediumFormat_getCapabilities' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_getCapabilities
'IVFSExplorer_exists' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_exists
'INetworkAdapter_getCableConnected' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getCableConnected
'IMachine_setVRAMSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'VRAMSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setVRAMSize
'IRecordingScreenSettings_getAudioCodec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getAudioCodec
'IFile_setSize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IFile_setSize
'ISerialPort_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setEnabled
'ICloudProvider_getProfileNames' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICloudProvider_getProfileNames
'IGuestProcess_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcess_getMidlDoesNotLikeEmptyInterfaces
'IUSBDeviceStateChangedEvent_getDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceStateChangedEvent_getDevice
'IFramebufferOverlay_getVisible' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebufferOverlay_getVisible
'ISystemProperties_setAutostartDatabasePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autostartDatabasePath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setAutostartDatabasePath
'IFile_write' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'data', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFile_write
'IUnattended_detectIsoOS' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_detectIsoOS
'IGuestSessionRegisteredEvent_getRegistered' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSessionRegisteredEvent_getRegistered
'IDHCPServer_addVmSlotOption' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'vmname', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'option', type => 'vbox:DhcpOpt', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_addVmSlotOption
'IDirectory_getFilter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDirectory_getFilter
'IVirtualBox_getAPIRevision' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getAPIRevision
'IUSBController_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getName
'ISnapshot_getMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getMachine
'IAudioAdapter_getProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getProperty
'IGuestSession_directoryCopy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'source', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'destination', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:DirectoryCopyFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryCopy
'IBandwidthGroupChangedEvent_getBandwidthGroup' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthGroupChangedEvent_getBandwidthGroup
'ISerialPort_setIOBase' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOBase', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setIOBase
'IMachine_setFaultToleranceSyncInterval' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'faultToleranceSyncInterval', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setFaultToleranceSyncInterval
'ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces
'IMachine_getFirmwareType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getFirmwareType
'IMedium_setProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setProperty
'ISharedFolder_setAutoMountPoint' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autoMountPoint', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_setAutoMountPoint
'IUnattended_getMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getMachine
'ICertificate_getRawCertData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getRawCertData
'IDisplay_viewportChanged' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_viewportChanged
'ISystemProperties_getWebServiceAuthLibrary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getWebServiceAuthLibrary
'ISystemProperties_getMaxBootPosition' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxBootPosition
'IEmulatedUSB_getWebcams' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEmulatedUSB_getWebcams
'IUnattended_setValidationKitIsoPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'validationKitIsoPath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setValidationKitIsoPath
'IEventSource_fireEvent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'event', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IEventSource_fireEvent
'IMouse_getNeedsHostCursor' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getNeedsHostCursor
'IHost_getProcessorCPUIDLeaf' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'leaf', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'subLeaf', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorCPUIDLeaf
'IVirtualSystemDescription_removeDescriptionByType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:VirtualSystemDescriptionType', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_removeDescriptionByType
'IBIOSSettings_getIOAPICEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getIOAPICEnabled
'IHost_getUSBDevices' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getUSBDevices
'IMachineDebugger_getSingleStep' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getSingleStep
'IConsole_getDebugger' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getDebugger
'IMachine_getExtraData' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getExtraData
'ICertificate_getFriendlyName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getFriendlyName
'IVRDEServer_getVRDEProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_getVRDEProperties
'IAudioAdapterChangedEvent_getAudioAdapter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapterChangedEvent_getAudioAdapter
'IMedium_getLocation' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getLocation
'IMachine_temporaryEjectDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'temporaryEject', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_temporaryEjectDevice
'IProcess_writeArray' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'handle', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:ProcessInputFlag', attr => {}),
      SOAP::Data->new(name => 'data', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProcess_writeArray
'IMachine_setCPUCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CPUCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUCount
'IFsObjInfo_getUserFlags' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getUserFlags
'IMachineDebugger_getLogRelFlags' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getLogRelFlags
'IUnattended_getFullUserName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_getFullUserName
'IGuestSession_getUser' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getUser
'IFramebuffer_getHeightReduction' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getHeightReduction
'IPerformanceMetric_getMinimumValue' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getMinimumValue
'IMachine_attachHostPCIDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostAddress', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'desiredGuestAddress', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'tryToUnbind', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_attachHostPCIDevice
'IMachine_setTracingConfig' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'tracingConfig', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setTracingConfig
'ISharedFolder_getAutoMount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_getAutoMount
'IUSBDeviceFilter_getRemote' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getRemote
'IMachine_getMediumAttachment' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_getMediumAttachment
'IRecordingScreenSettings_getFeatures' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_getFeatures
'IVRDEServer_setVRDEProperty' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDEServer_setVRDEProperty
'IMachine_getNetworkAdapter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getNetworkAdapter
'IDisplay_createGuestScreenInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'display', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'status', type => 'vbox:GuestMonitorStatus', attr => {}),
      SOAP::Data->new(name => 'primary', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'changeOrigin', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'originX', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'originY', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bitsPerPixel', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_createGuestScreenInfo
'IHostUSBDeviceFilter_getAction' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostUSBDeviceFilter_getAction
'IProgress_getTimeRemaining' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getTimeRemaining
'IFile_writeAt' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'data', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFile_writeAt
'IMachine_setFaultTolerancePort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'faultTolerancePort', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setFaultTolerancePort
'IRecordingScreenSettings_setAudioCodec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioCodec', type => 'vbox:RecordingAudioCodec', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setAudioCodec
'IMachine_getExtraDataKeys' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getExtraDataKeys
'IConsole_getEmulatedUSB' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getEmulatedUSB
'IProgress_getCancelable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getCancelable
'IDnDTarget_enter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'defaultAction', type => 'vbox:DnDAction', attr => {}),
      SOAP::Data->new(name => 'allowedActions', type => 'vbox:DnDAction', attr => {}),
      SOAP::Data->new(name => 'formats', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDnDTarget_enter
'IMachine_getMemorySize' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMemorySize
'IShowWindowEvent_setWinId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'winId', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IShowWindowEvent_setWinId
'IExtraDataCanChangeEvent_getValue' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IExtraDataCanChangeEvent_getValue
'IGuestSession_getDirectories' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getDirectories
'ISystemProperties_getMaxNetworkAdapters' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'chipset', type => 'vbox:ChipsetType', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxNetworkAdapters
'IMedium_getDeviceType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getDeviceType
'IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces
'IToken_dummy' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IToken_dummy
'INetworkAdapter_getGenericDriver' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getGenericDriver
'IVirtualBox_composeMachineFilename' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'group', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'createFlags', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'baseFolder', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_composeMachineFilename
'IMachine_addStorageController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'connectionType', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end IMachine_addStorageController
'IFramebuffer_getHeight' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getHeight
'IHostNetworkInterface_DHCPRediscover' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_DHCPRediscover
'IFramebufferOverlay_setAlpha' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'alpha', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFramebufferOverlay_setAlpha
'IMachine_addUSBController' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:USBControllerType', attr => {}),
    ], # end parameters
  }, # end IMachine_addUSBController
'IMedium_getFormat' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getFormat
'INATEngine_getTFTPPrefix' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getTFTPPrefix
'IMachineDebugger_dumpHostProcessCore' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'filename', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'compression', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_dumpHostProcessCore
'IBIOSSettings_getLogoImagePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoImagePath
'INATEngine_getNetwork' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getNetwork
'IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces
'IMachine_setTeleporterAddress' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterAddress
'IUnattended_setPostInstallScriptTemplatePath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'postInstallScriptTemplatePath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setPostInstallScriptTemplatePath
'IEvent_getWaitable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IEvent_getWaitable
'IGuestMouseEvent_getY' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMouseEvent_getY
'ISystemProperties_setProxyURL' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'proxyURL', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setProxyURL
'ISharedFolder_setWritable' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end ISharedFolder_setWritable
'IUnattended_setCountry' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'country', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setCountry
'INATNetwork_getPortForwardRules4' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getPortForwardRules4
'IMachine_setOSTypeId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'OSTypeId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setOSTypeId
'ICertificate_getIssuerUniqueIdentifier' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getIssuerUniqueIdentifier
'IMachine_getSessionName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSessionName
'IFsObjInfo_getNodeId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getNodeId
'IHostNetworkInterface_getIPV6Address' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPV6Address
'IMachineDebugger_readPhysicalMemory' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'address', type => 'xsd:long', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_readPhysicalMemory
'IAppliance_getPath' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getPath
'IBIOSSettings_getBootMenuMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getBootMenuMode
'IFsObjInfo_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getName
'IMachineDebugger_getPAEEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getPAEEnabled
'INATRedirectEvent_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATRedirectEvent_getName
'IGuestMonitorChangedEvent_getChangeType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMonitorChangedEvent_getChangeType
'IGuestProcessIOEvent_getProcessed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessIOEvent_getProcessed
'ISystemProperties_getMediumFormats' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMediumFormats
'IGuestProcessInputNotifyEvent_getStatus' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessInputNotifyEvent_getStatus
'ISystemProperties_setLoggingLevel' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'loggingLevel', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setLoggingLevel
'IRecordingScreenSettings_setEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setEnabled
'IGuestMonitorChangedEvent_getOriginX' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestMonitorChangedEvent_getOriginX
'IGuestProcessIOEvent_getHandle' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessIOEvent_getHandle
'IMouse_putMouseEvent' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dx', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dy', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dz', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dw', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'buttonState', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMouse_putMouseEvent
'IFramebuffer_notifyChange' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'xOrigin', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'yOrigin', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_notifyChange
'INATNetwork_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getEnabled
'ICertificate_getValidityPeriodNotBefore' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ICertificate_getValidityPeriodNotBefore
'IFsObjInfo_getBirthTime' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFsObjInfo_getBirthTime
'IMedium_getChildren' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getChildren
'IMachine_getId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getId
'IGuestScreenInfo_getExtendedInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestScreenInfo_getExtendedInfo
'IUnattended_setUser' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'user', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUnattended_setUser
'INATNetworkPortForwardEvent_getGuestPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getGuestPort
'IStorageDeviceChangedEvent_getStorageDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageDeviceChangedEvent_getStorageDevice
'IGuestSession_fsObjRename' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'oldPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'newPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:FsObjRenameFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_fsObjRename
'IMachine_getGuestPropertyValue' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGuestPropertyValue
'IBandwidthGroup_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthGroup_getName
'IVirtualBox_registerMachine' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machine', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_registerMachine
'INATNetworkSettingEvent_getEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkSettingEvent_getEnabled
'IMediumChangedEvent_getMediumAttachment' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumChangedEvent_getMediumAttachment
'IConsole_powerUp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerUp
'INATEngine_getAliasMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getAliasMode
'IParallelPort_getSlot' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getSlot
'ISystemProperties_getVRDEAuthLibrary' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getVRDEAuthLibrary
'IStorageController_setControllerType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerType', type => 'vbox:StorageControllerType', attr => {}),
    ], # end parameters
  }, # end IStorageController_setControllerType
'IHost_getProcessorFeature' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'feature', type => 'vbox:ProcessorFeature', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorFeature
'IMedium_mergeTo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_mergeTo
'INATEngine_getNetworkSettings' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getNetworkSettings
'IRecordingScreenSettings_setVideoCodec' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoCodec', type => 'vbox:RecordingVideoCodec', attr => {}),
    ], # end parameters
  }, # end IRecordingScreenSettings_setVideoCodec
'IConsole_addDiskEncryptionPasswords' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ids', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'passwords', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'clearOnSuspend', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IConsole_addDiskEncryptionPasswords
'IGuestProcessStateChangedEvent_getError' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestProcessStateChangedEvent_getError
'IMachine_getDnDMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getDnDMode
'IDHCPServer_getNetworkMask' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getNetworkMask
'INetworkAdapter_setGenericDriver' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'genericDriver', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setGenericDriver
'IPCIAddress_getDevice' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_getDevice
'IExtraDataChangedEvent_getMachineId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IExtraDataChangedEvent_getMachineId
'IProcess_terminate' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProcess_terminate
'ISystemProperties_getMinGuestCPUCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinGuestCPUCount
'IConsole_getSharedFolders' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getSharedFolders
'IMachine_setMonitorCount' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'monitorCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setMonitorCount
'IBandwidthControl_deleteBandwidthGroup' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBandwidthControl_deleteBandwidthGroup
'IMachine_setKeyboardHIDType' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'keyboardHIDType', type => 'vbox:KeyboardHIDType', attr => {}),
    ], # end parameters
  }, # end IMachine_setKeyboardHIDType
'IMachineDebugger_dumpGuestStack' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_dumpGuestStack
'IVirtualBoxErrorInfo_getInterfaceID' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getInterfaceID
'IGuestSession_getEnvironmentChanges' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuestSession_getEnvironmentChanges
'INetworkAdapter_getProperties' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getProperties
'IMachine_unmountMedium' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'force', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_unmountMedium
'IMachine_setClipboardMode' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'clipboardMode', type => 'vbox:ClipboardMode', attr => {}),
    ], # end parameters
  }, # end IMachine_setClipboardMode
'IFramebuffer_getWidth' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_getWidth
'INetworkAdapter_setLineSpeed' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lineSpeed', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setLineSpeed
'IExtraDataCanChangeEvent_getMachineId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IExtraDataCanChangeEvent_getMachineId
'IShowWindowEvent_getWinId' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IShowWindowEvent_getWinId
'IHost_findHostNetworkInterfaceById' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostNetworkInterfaceById
'IAudioAdapter_getEnabledIn' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getEnabledIn
'IGuest_createSession' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'user', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'domain', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'sessionName', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_createSession
'IUSBDevice_getDeviceInfo' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getDeviceInfo
'IGuestSession_directoryOpen' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'filter', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'vbox:DirectoryOpenFlag', attr => {}),
    ], # end parameters
  }, # end IGuestSession_directoryOpen
'IVirtualSystemDescription_getDescription' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getDescription
'IMachine_getAutostartDelay' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAutostartDelay
'IPCIAddress_asLong' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPCIAddress_asLong
'INATEngine_removeRedirect' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_removeRedirect
'IMedium_openForIO' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_openForIO
'INetworkAdapter_getTraceEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getTraceEnabled
'IMachineDebugger_setPATMEnabled' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'PATMEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_setPATMEnabled
'INATNetwork_setIPv6Prefix' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPv6Prefix', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_setIPv6Prefix
'IHost_createUSBDeviceFilter' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_createUSBDeviceFilter
'INATNetworkPortForwardEvent_getHostIp' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetworkPortForwardEvent_getHostIp
'INATNetwork_getIPv6Prefix' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATNetwork_getIPv6Prefix
'IMachineDebugger_getOSName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachineDebugger_getOSName
'ISystemProperties_setDefaultVRDEExtPack' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultVRDEExtPack', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultVRDEExtPack
'IMedium_getState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getState
'ISystemProperties_getRawModeSupported' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getRawModeSupported
'IMachine_getTeleporterPort' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterPort
'IStorageController_getName' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getName
'IFramebuffer_notifyUpdateImage' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'image', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IFramebuffer_notifyUpdateImage
'IMachine_saveState' => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_saveState
); # end my %methods

use SOAP::Lite;
use Exporter;
use Carp ();

use vars qw(@ISA $AUTOLOAD @EXPORT_OK %EXPORT_TAGS);
@ISA = qw(Exporter SOAP::Lite);
@EXPORT_OK = (keys %methods);
push @EXPORT_OK, qw($endpoint $fault);
%EXPORT_TAGS = ('all' => [@EXPORT_OK]);

sub _call {
    my ($self, $method) = (shift, shift);
    my $name = UNIVERSAL::isa($method => 'SOAP::Data') ? $method->name : $method;
    my %method = %{$methods{$name}};
    $self->soapversion('1.1'); # Lets insist on SOAP 1.1
    $self->proxy($method{endpoint} || Carp::croak "No server address (proxy) specified")
        unless $self->proxy;
    my @templates = @{$method{parameters}};
    my @parameters = ();
    foreach my $param (@_) {
        if (@templates) {
            my $template = shift @templates;
            my ($prefix,$typename) = SOAP::Utils::splitqname($template->type);
            my $method = 'as_'.$typename;
            # TODO - if can('as_'.$typename) {...}
            my $result = $self->serializer->$method($param, $template->name, $template->type, $template->attr);
            push(@parameters, $template->value($result->[2]));
        }
        else {
            push(@parameters, $param);
        }
    }
    $self->on_fault($fault);
    $self->endpoint($endpoint)
       ->ns($method{namespace})
       ->on_action(sub{qq!"$method{soapaction}"!});
  $self->serializer->register_ns("http://www.virtualbox.org/","vbox");
  $self->serializer->register_ns("urn:vbox","interface");
    my $som = $self->SUPER::call($method => @parameters);
    if ($self->want_som) {
        return $som;
    }
    UNIVERSAL::isa($som => 'SOAP::SOM') ? wantarray ? $som->paramsall : $som->result : $som;
}

sub BEGIN {
    no strict 'refs';
    for my $method (qw(want_som)) {
        my $field = '_' . $method;
        *$method = sub {
            my $self = shift->new;
            @_ ? ($self->{$field} = shift, return $self) : return $self->{$field};
        }
    }
}
no strict 'refs';
for my $method (@EXPORT_OK) {
    my %method = %{$methods{$method}};
    *$method = sub {
        my $self = UNIVERSAL::isa($_[0] => __PACKAGE__)
            ? ref $_[0]
                ? shift # OBJECT
                # CLASS, either get self or create new and assign to self
                : (shift->self || __PACKAGE__->self(__PACKAGE__->new))
            # function call, either get self or create new and assign to self
            : (__PACKAGE__->self || __PACKAGE__->self(__PACKAGE__->new));
        $self->_call($method, @_);
    }
}

sub AUTOLOAD {
    my $method = substr($AUTOLOAD, rindex($AUTOLOAD, '::') + 2);
    return if $method eq 'DESTROY' || $method eq 'want_som';
    die "Unrecognized method '$method'. List of available method(s): @EXPORT_OK\n";
}

1;
